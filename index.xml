<?xml-stylesheet href="/rss.xsl" type="text/xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Magical trees, take me home.</title><link>/</link><description>Recent content on Magical trees, take me home.</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Wed, 04 Sep 2024 00:00:00 +0800</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Buildroot Cheatsheet</title><link>/posts/buildroot-cheetsheet/</link><pubDate>Wed, 04 Sep 2024 00:00:00 +0800</pubDate><guid>/posts/buildroot-cheetsheet/</guid><description>Magical trees, take me home. /posts/buildroot-cheetsheet/ -&lt;blockquote>
&lt;p>完整文档可以在&lt;a href="https://buildroot.org/downloads/manual/manual.html">官方网站&lt;/a>找到。&lt;/p>
&lt;/blockquote>
&lt;h2 id="快速开始一个buildroot项目">快速开始一个buildroot项目&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b">buildroot_repo&lt;/span>=https://github.com/buildroot/buildroot.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b">buildroot_version&lt;/span>=2022.11
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b">buildroot_src&lt;/span>=buildroot-&lt;span style="color:#00688b">$buildroot_version&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b">buildroot_defcfg&lt;/span>=raspberrypi4_defconfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone --branch &lt;span style="color:#00688b">$buildroot_version&lt;/span> --depth &lt;span style="color:#b452cd">1&lt;/span> &lt;span style="color:#00688b">$buildroot_repo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make -C &lt;span style="color:#00688b">$buildroot_src&lt;/span> defconfig &lt;span style="color:#00688b">BR2_DEFCONFIG&lt;/span>=&lt;span style="color:#00688b">$buildroot_defcfg&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make -C &lt;span style="color:#00688b">$buildroot_src&lt;/span> linux-reconfigure all
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="基本命令">基本命令&lt;/h2>
&lt;p>&lt;a href="https://buildroot.org/downloads/manual/manual.html#make-tips">Make 提示&lt;/a>&lt;/p>
&lt;p>使用 &lt;code>make help&lt;/code> 获取所有可用目标的列表。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>命令&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>make&lt;/td>
&lt;td>构建 rootfs&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>make xyz_defconfig&lt;/td>
&lt;td>选择配置文件&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>make menuconfig&lt;/td>
&lt;td>打开配置菜单&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>make savedefconfig&lt;/td>
&lt;td>将当前配置保存到 defconfig 文件中&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>make source&lt;/td>
&lt;td>下载包的源代码&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>make clean&lt;/td>
&lt;td>清理所有构建产品（包括构建目录、主机、暂存和目标树、镜像和工具链）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>make distclean&lt;/td>
&lt;td>清理所有内容，包括配置&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="包管理">包管理&lt;/h3>
&lt;blockquote>
&lt;p>&lt;a href="https://buildroot.org/downloads/manual/manual.html#pkg-build-steps">特定包的 make 目标&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>命令&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>make &amp;lt;pkg&amp;gt;&lt;/td>
&lt;td>构建一个包&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>make &amp;lt;pkg&amp;gt;-reinstall&lt;/td>
&lt;td>重新安装一个包&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>make &amp;lt;pkg&amp;gt;-rebuild&lt;/td>
&lt;td>重新构建一个包（这意味着重新安装）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>make &amp;lt;pkg&amp;gt;-reconfigure&lt;/td>
&lt;td>重新配置一个包（这意味着重新构建）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>make &amp;lt;pkg&amp;gt;-dirclean&lt;/td>
&lt;td>清理包目录&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="调试">调试&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>命令&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>make graph-depends&lt;/td>
&lt;td>生成依赖关系图&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>make &amp;lt;pkg&amp;gt;-graph-depends&lt;/td>
&lt;td>生成包的依赖关系图&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="目录结构">目录结构&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>目录&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>configs&lt;/td>
&lt;td>单板的配置和 defconfig 文件的位置&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>package&lt;/td>
&lt;td>包定义的位置&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dl&lt;/td>
&lt;td>下载的源代码压缩包&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>output/build&lt;/td>
&lt;td>所有组件构建的目录&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>output/images&lt;/td>
&lt;td>构建的内核、引导加载程序和根文件系统镜像的位置&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>output/staging&lt;/td>
&lt;td>交叉编译工具链和用户空间包的头文件和库的位置（这是 host/&lt;toolchains>/sysroot 的软链）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>output/host&lt;/td>
&lt;td>包括交叉编译工具链在内的主机工具的位置&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>output/target&lt;/td>
&lt;td>几乎是最终的目标根文件系统&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="mk-文件">&lt;code>.mk&lt;/code> 文件&lt;/h2>
&lt;h3 id="cmake">Cmake&lt;/h3>
&lt;blockquote>
&lt;p>&lt;a href="https://buildroot.org/downloads/manual/manual.html#cmake-package-tutorial">cmake 包教程&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>一个 cmake 包的示例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-makefile" data-lang="makefile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">################################################################################
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">#
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22"># libfoo
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">#
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">################################################################################
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b">LIBFOO_VERSION&lt;/span> = 1.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b">LIBFOO_SOURCE&lt;/span> = libfoo-&lt;span style="color:#8b008b;font-weight:bold">$(&lt;/span>LIBFOO_VERSION&lt;span style="color:#8b008b;font-weight:bold">)&lt;/span>.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b">LIBFOO_SITE&lt;/span> = http://www.foosoftware.org/download
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b">LIBFOO_INSTALL_STAGING&lt;/span> = YES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b">LIBFOO_INSTALL_TARGET&lt;/span> = NO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b">LIBFOO_CONF_OPTS&lt;/span> = -DBUILD_DEMOS=ON
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b">LIBFOO_DEPENDENCIES&lt;/span> = libglib2 host-pkgconf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">$(&lt;/span>&lt;span style="color:#00688b">eval&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">$(&lt;/span>&lt;span style="color:#00688b">cmake&lt;/span>-&lt;span style="color:#00688b">package&lt;/span>&lt;span style="color:#8b008b;font-weight:bold">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="外部包和-sysvinit">外部包和 sysvinit&lt;/h3>
&lt;p>一个带有 sysvinit 的外部包示例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-makefile" data-lang="makefile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">################################################################################
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">#
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22"># gsmmux 项目
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">#
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">################################################################################
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b">GSMMUX_SITE&lt;/span> = &lt;span style="color:#8b008b;font-weight:bold">$(&lt;/span>TOPDIR&lt;span style="color:#8b008b;font-weight:bold">)&lt;/span>/../external/path/gsmmux
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b">GSMMUX_SITE_METHOD&lt;/span> = &lt;span style="color:#658b00">local&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b">GSMMUX_INSTALL_STAGING&lt;/span> = YES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b">GSMMUX_VERSION&lt;/span> = 1.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a61717;background-color:#e3d2d2">define&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">GSMMUX_INSTALL_INIT_SYSV&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">$(&lt;/span>&lt;span style="color:#00688b">INSTALL&lt;/span>&lt;span style="color:#8b008b;font-weight:bold">)&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">-D&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">-m&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">755&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">$(&lt;/span>@&lt;span style="color:#00688b">D&lt;/span>&lt;span style="color:#8b008b;font-weight:bold">)&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">/S50start_cmuxd&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">\&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">$(&lt;/span>&lt;span style="color:#00688b">TARGET_DIR&lt;/span>&lt;span style="color:#8b008b;font-weight:bold">)&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">/etc/init.d/S50start_cmuxd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a61717;background-color:#e3d2d2">endef&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">$(&lt;/span>&lt;span style="color:#00688b">eval&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">$(&lt;/span>&lt;span style="color:#00688b">cmake&lt;/span>-&lt;span style="color:#00688b">package&lt;/span>&lt;span style="color:#8b008b;font-weight:bold">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="如何设置-ccache编译缓存">如何设置 ccache（编译缓存）？&lt;/h3>
&lt;p>&lt;a href="https://buildroot.org/downloads/manual/manual.html#ccache">在 Buildroot 中使用 ccache&lt;/a>&lt;/p>
&lt;p>&lt;code>ccache&lt;/code> 支持已集成在 Buildroot 中。只需在 &lt;code>Build options&lt;/code> 中启用 &lt;code>Enable compiler cache&lt;/code>。这将自动构建 &lt;code>ccache&lt;/code> 并将其用于每个主机和目标编译。&lt;/p>
&lt;p>&lt;code>cache&lt;/code> 位于 &lt;code>BR2_CCACHE_DIR&lt;/code> 配置选项定义的目录中，默认值为 &lt;code>$HOME/.buildroot-ccache&lt;/code>。此默认位置在 Buildroot 输出目录之外，因此可以由单独的 Buildroot 构建共享。如果要删除缓存，只需删除此目录。&lt;/p>
&lt;h3 id="如何重新生成targetrootfs">如何重新生成target/rootfs&lt;/h3>
&lt;p>&lt;a href="https://stackoverflow.com/questions/47320800/how-to-clean-only-target-in-buildroot">How to clean only target in buildroot&lt;/a>&lt;/p>
&lt;p>由于&lt;code>rm -rf output/target &amp;amp;&amp;amp; make&lt;/code>并不会触发install操作，所以需要用以下hack来实现：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>rm -rf output/target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22"># 删除所有的 .stamp_target_installed 文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>find ../ -name &lt;span style="color:#cd5555">&amp;#34;.stamp_target_installed&amp;#34;&lt;/span> -delete
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rm -f output/build/host-gcc-final-*/.stamp_host_installed
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>- /posts/buildroot-cheetsheet/ -</description></item><item><title>Yocto &amp; Bitbake Cheatsheet</title><link>/posts/yocto-cheetsheet/</link><pubDate>Wed, 04 Sep 2024 00:00:00 +0800</pubDate><guid>/posts/yocto-cheetsheet/</guid><description>Magical trees, take me home. /posts/yocto-cheetsheet/ -&lt;blockquote>
&lt;p>完整文档可以在&lt;a href="https://docs.yoctoproject.org/">Yocto 文档网站&lt;/a>找到。
参考自&lt;a href="https://github.com/shantanoo-desai/yoctoproject-cheatsheet">yoctoproject-cheatsheet&lt;/a>。&lt;/p>
&lt;/blockquote>
&lt;h2 id="cli-命令">Cli 命令&lt;/h2>
&lt;p>需要先通过&lt;code>source setup-environment&lt;/code>设置Bitbake环境&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>命令&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>bitbake &lt;image>&lt;/td>
&lt;td>编译指定的 image&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bitbake -c &lt;task> &lt;recipe>&lt;/td>
&lt;td>执行指定的 task。 可选的 task 有: &lt;code>fetch&lt;/code>, &lt;code>unpack&lt;/code>, &lt;code>patch&lt;/code>, &lt;code>configure&lt;/code>, &lt;code>compile&lt;/code>, &lt;code>install&lt;/code>, &lt;code>package&lt;/code>, &lt;code>clean&lt;/code>, &lt;code>cleansstate&lt;/code>, &lt;code>rebuild&lt;/code>, &lt;code>reconfigure&lt;/code>, &lt;code>reinstall&lt;/code>等。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bitbake -c cleanall &lt;recipe>&lt;/td>
&lt;td>清理指定的 recipe. 包括工作目录和 sstate cache&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bitbake -c devshell &lt;recipe>&lt;/td>
&lt;td>进入指定 recipe 的 shell 环境&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bitbake -c listtasks &lt;recipe>&lt;/td>
&lt;td>列出指定 recipe 的所有 task&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bitbake -c showappends &lt;recipe>&lt;/td>
&lt;td>显示指定 recipe 的所有 append 文件&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bitbake -e &lt;recipe>&lt;/td>
&lt;td>显示指定 recipe 的所有变量&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bitbake -s&lt;/td>
&lt;td>列出所有可用的 recipe&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bitbake -S &lt;recipe>&lt;/td>
&lt;td>显示指定 recipe 的依赖关系&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bitbake &lt;image> &amp;ndash;graphviz &amp;ndash;ui=depexp&lt;/td>
&lt;td>生成&lt;image>的包依赖关系图&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bitbake-layers show-layers&lt;/td>
&lt;td>显示所有的 layer&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bitbake-layers show-appends&lt;/td>
&lt;td>显示所有的 append 文件&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bitbake-layers show-recipes&lt;/td>
&lt;td>显示所有的 recipe&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bitbake-layers show-recipes &amp;ldquo;gdb*&amp;rdquo;&lt;/td>
&lt;td>搜索 recipe&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bitbake-layers show-depends&lt;/td>
&lt;td>显示所有的依赖关系&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="变量语法和操作">变量语法和操作&lt;/h2>
&lt;blockquote>
&lt;p>参考自&lt;a href="https://docs.yoctoproject.org/bitbake/2.4/bitbake-user-manual/bitbake-user-manual-metadata.html">Bitbake User Manual&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>可以随时使用 &lt;code>bitbake -e&lt;/code> 查看编译时的变量。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>语法&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>VARIABLE = &amp;quot;value&amp;quot;&lt;/code>&lt;/td>
&lt;td>设置变量&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VARIABLE = &amp;quot; value &amp;quot;&lt;/code>&lt;/td>
&lt;td>如果变量值中有空格，那么空格会被&lt;strong>保留&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VARIABLE = &amp;quot;&amp;quot;&lt;/code>&lt;/td>
&lt;td>设置变量为空&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VARIABLE = &amp;quot; &amp;quot;&lt;/code>&lt;/td>
&lt;td>设置变量为一个空格&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VARIABLE = '&amp;quot;'&lt;/code>&lt;/td>
&lt;td>通过单引号设置含有双引号的变量&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VARIABLE = &amp;quot;${OTHER_VARIABLE}&amp;quot;&lt;/code>&lt;/td>
&lt;td>引用其他变量, 变量在&lt;strong>真正使用时&lt;/strong>才会被展开&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VARIABLE := &amp;quot;${OTHER_VARIABLE}&amp;quot;&lt;/code>&lt;/td>
&lt;td>设置变量，&lt;strong>立即展开&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VARIABLE ?= &amp;quot;value&amp;quot;&lt;/code>&lt;/td>
&lt;td>设置默认值，如果变量已经设置，那么不会覆盖&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VARIABLE ??= &amp;quot;value&amp;quot;&lt;/code>&lt;/td>
&lt;td>设置&lt;em>弱&lt;/em>默认值，见&lt;a href="https://docs.yoctoproject.org/bitbake/2.4/bitbake-user-manual/bitbake-user-manual-metadata.html#setting-a-weak-default-value">弱默认值&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VARIABLE += &amp;quot;value&amp;quot;&lt;/code>&lt;/td>
&lt;td>追加变量值（带空格）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VARIABLE =+ &amp;quot;value&amp;quot;&lt;/code>&lt;/td>
&lt;td>在变量值前面追加（带空格）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VARIABLE .= &amp;quot;value&amp;quot;&lt;/code>&lt;/td>
&lt;td>追加变量值（无空格）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>VARIABLE =. &amp;quot;value&amp;quot;&lt;/code>&lt;/td>
&lt;td>在变量值后面追加（无空格）&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>TODO&lt;/p>
&lt;/blockquote>
&lt;h2 id="localconf-配置">&lt;code>local.conf&lt;/code> 配置&lt;/h2>
&lt;p>这些配置可以加入到 &lt;code>local.conf&lt;/code> 或者&lt;code>bblayers.conf&lt;/code>文件中，也根据需求加入其他 Machine 配置中。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>配置&lt;/th>
&lt;th>作用&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>RM_WORK_EXCLUDE += &amp;quot;recipe_name&amp;quot;&lt;/code>&lt;/td>
&lt;td>编译后&lt;strong>不删除&lt;/strong>指定的 recipe 的工作目录，用于调试&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>INHERIT += &amp;quot;rm_work&amp;quot;&lt;/code>&lt;/td>
&lt;td>编译后&lt;strong>删除&lt;/strong>工作目录&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="faq">FAQ&lt;/h2>
&lt;h3 id="note-reconnecting-to-bitbake-server">NOTE: Reconnecting to bitbake server&lt;/h3>
&lt;p>删除 bitbake.lock&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>rm -rf &amp;lt;build-dir&amp;gt;/bitbake.lock
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="error-nothing-provides-a-needed-by-b">ERROR: nothing provides A needed by B&lt;/h3>
&lt;ul>
&lt;li>情况一： recipe A 不存在，没有被添加到 packagegroup 或者 dependcy 中&lt;/li>
&lt;li>情况二： recipe A 编出来是空包，没有生成任何文件。需要在 A 的 recipe 中添加 &lt;code>ALLOW_EMPTY_${PN} = &amp;quot;1&amp;quot;&lt;/code> 来解决&lt;/li>
&lt;/ul>
&lt;p>经常在编译动态库时会遇到这个问题，因为动态库的 recipe 生成的是一个空包。&lt;/p>
&lt;p>&lt;a href="https://stackoverflow.com/questions/59091938/yocto-oe-recipe-with-cmake-install-a-shared-library-so">Yocto / OE : recipe with CMake install a shared library .so - Stack Overflow&lt;/a>
&lt;a href="https://docs.yoctoproject.org/pipermail/yocto/2015-January/022921.html">do_rootfs missing package (ipk) or not found in base feeds (rpm) (yoctoproject.org)&lt;/a>&lt;/p>
&lt;p>只有 &lt;code>*.so.*&lt;/code>（包含版本号的动态库）会被打包进 FILES_${PN}，而软链接 &lt;code>*.so&lt;/code> 会被打包进 &lt;code>-dev&lt;/code>package&lt;/p>
&lt;h3 id="如何使用-devtool-新增patch">如何使用 &lt;code>devtool&lt;/code> 新增patch&lt;/h3>
&lt;p>&lt;a href="https://stackoverflow.com/questions/33939837/what-is-best-practice-to-do-small-changes-in-source-code-in-yocto">bitbake - What is best practice to do small changes in source code in Yocto - Stack Overflow&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>devtool modify -x &amp;lt;recipe&amp;gt; &amp;lt;path-to-unpack&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>devtool build &amp;lt;recipe&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22"># 修改位于&amp;lt;path-to-unpack&amp;gt;的源码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git add
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git commit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>devtool update-recipe &amp;lt;recipe&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>devtool reset &amp;lt;recipe&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>- /posts/yocto-cheetsheet/ -</description></item><item><title>Linux Process 的内存布局</title><link>/posts/linux-memory-layout-of-process/</link><pubDate>Tue, 25 Jul 2023 22:17:00 +0800</pubDate><guid>/posts/linux-memory-layout-of-process/</guid><description>Magical trees, take me home. /posts/linux-memory-layout-of-process/ -&lt;h2 id="内存布局">内存布局&lt;/h2>
&lt;p>一般而言，C程序通常由一下几个部分组成。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>正文段&lt;/p>
&lt;ul>
&lt;li>正文段是用于存储代码的，也称之为代码段。如果函数是可重入的，那么代码段是可以共享的。正文段通常都是只读的，以防止被更改。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>初始化数据段&lt;/p>
&lt;ul>
&lt;li>初始化数据段包含了程序中需要明确初始化的变量。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>未初始化数据段&lt;/p>
&lt;ul>
&lt;li>未初始化数据段也被称为bss段。这里的存放的数据是交由内核来完成初始化为0的操作。例如：函数外定义的数组，它会在程序执行之前被内核全部初始化为0。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>栈区&lt;/p>
&lt;ul>
&lt;li>自动变量以及每次函数调用时需要保存的信息都被保存在这个区域。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>堆区&lt;/p>
&lt;ul>
&lt;li>通常在堆区进行动态内存分配。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>对于Intel x86处理器上的Linux操作系统而言，典型的存储空间布局如下：&lt;/p>
&lt;p>&lt;img src="/img/process_memory_layout.png" alt="内存布局">&lt;/p>
&lt;h2 id="命令行参数和环境变量">命令行参数和环境变量&lt;/h2>
&lt;p>命令行参数是指从命令行执行程序的时候，给程序的参数。C语言总是从main函数执行的，它的命令行参数被ISO C和POSIX规定为如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b;font-weight:bold">int&lt;/span> &lt;span style="color:#008b45">main&lt;/span>(&lt;span style="color:#00688b;font-weight:bold">int&lt;/span> argc,&lt;span style="color:#00688b;font-weight:bold">char&lt;/span> *argv[]);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>main函数的第一个参数argc保存的是程序执行的时候，命令行输入的参数总个数。其中第0个参数就是被执行的程序名字。第二个参数argv是用来保存命令行参数的。ISO C和POSIX都要求argv[argc]是一个空指针。&lt;/p>
&lt;p>一个简单的实例如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1e889b">#include&lt;/span>&lt;span style="color:#1e889b">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#1e889b">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1e889b">&lt;/span>&lt;span style="color:#00688b;font-weight:bold">int&lt;/span> &lt;span style="color:#008b45">main&lt;/span>(&lt;span style="color:#00688b;font-weight:bold">int&lt;/span> argc,&lt;span style="color:#00688b;font-weight:bold">char&lt;/span> *argv[])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008b45">printf&lt;/span>(&lt;span style="color:#cd5555">&amp;#34;程序执行名：%s&lt;/span>&lt;span style="color:#cd5555">\n&lt;/span>&lt;span style="color:#cd5555">&amp;#34;&lt;/span>,argv[&lt;span style="color:#b452cd">0&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008b45">printf&lt;/span>(&lt;span style="color:#cd5555">&amp;#34;参数列表：&lt;/span>&lt;span style="color:#cd5555">\n&lt;/span>&lt;span style="color:#cd5555">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> (&lt;span style="color:#00688b;font-weight:bold">int&lt;/span> i = &lt;span style="color:#b452cd">1&lt;/span>; i &amp;lt; argc; i++)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008b45">printf&lt;/span>(&lt;span style="color:#cd5555">&amp;#34;%s&lt;/span>&lt;span style="color:#cd5555">\n&lt;/span>&lt;span style="color:#cd5555">&amp;#34;&lt;/span>,argv[i]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">return&lt;/span> &lt;span style="color:#b452cd">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>执行结果如下：
&lt;img src="/img/argc_argv_example.jpg" alt="example">&lt;/p>
&lt;p>现在，POSIX规定了不使用第三个参数，通常使用getenv函数和putenv函数来访问环境变量。&lt;/p>
&lt;p>每次程序都有一张环境表，当我们需要查看整个环境的时候，可以使用全局变量environ。它包含了该指针数字的地址。&lt;/p>
&lt;p>&lt;code>extern char **environ;&lt;/code>&lt;/p>
&lt;p>我们来写个程序打印一下全部的环境变量。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1e889b">#include&lt;/span>&lt;span style="color:#1e889b">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#1e889b">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#1e889b">&lt;/span>&lt;span style="color:#8b008b;font-weight:bold">extern&lt;/span> &lt;span style="color:#00688b;font-weight:bold">char&lt;/span> **environ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b;font-weight:bold">int&lt;/span> &lt;span style="color:#008b45">main&lt;/span>(&lt;span style="color:#00688b;font-weight:bold">int&lt;/span> argc,&lt;span style="color:#00688b;font-weight:bold">char&lt;/span> *argv[])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> (&lt;span style="color:#00688b;font-weight:bold">int&lt;/span> i = &lt;span style="color:#b452cd">0&lt;/span>; &lt;span style="color:#658b00">NULL&lt;/span> != environ[i]; i++)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#008b45">printf&lt;/span>(&lt;span style="color:#cd5555">&amp;#34;%s&lt;/span>&lt;span style="color:#cd5555">\n&lt;/span>&lt;span style="color:#cd5555">&amp;#34;&lt;/span>,environ[i]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">return&lt;/span> &lt;span style="color:#b452cd">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>执行以后的结果如下：
&lt;img src="/img/environ_example.jpg" alt="example">&lt;/p>
&lt;p>依照惯例，环境变量应该是&lt;code>name=value&lt;/code>这样的字符串构成。ISO C给我们提供了一些和环境变量有关的函数。可以通过以下方法查询：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>man getenv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>man setenv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>- /posts/linux-memory-layout-of-process/ -</description></item><item><title>MacOS 的 Emacs 风格键盘快捷键</title><link>/posts/emacs-style-keyboard-shortcut-of-macos/</link><pubDate>Sat, 07 May 2022 00:00:00 +0800</pubDate><guid>/posts/emacs-style-keyboard-shortcut-of-macos/</guid><description>Magical trees, take me home. /posts/emacs-style-keyboard-shortcut-of-macos/ -&lt;blockquote>
&lt;p>译自： &lt;a href="https://jblevins.org/log/kbd">(Emacs) Keyboard Shortcuts for Editing Text Fields in OS X&lt;/a>&lt;/p>
&lt;p>by JASON BLEVINS (JULY 17, 2015)&lt;/p>
&lt;/blockquote>
&lt;p>众所周知，&lt;abbr class="abbr" title="操作系统">MacOS&lt;/abbr> 有一组键盘快捷键，其中常用方向键控制Web 表单、输入框、纯文本文档等文本字段的编辑。举个例子， &lt;kbd>⌘←&lt;/kbd>将光标移动到当前行的开头。&lt;/p>
&lt;p>尽管它们在官方的文档中有提及&lt;a href="https://support.apple.com/en-us/HT201236">(Mac 键盘快捷键)&lt;/a>，但似乎不太为人所知的是， &lt;abbr class="abbr">MacOS&lt;/abbr > 还原生支持某些 Emacs 键盘快捷键。 例如，要移动到当前行的开头或结尾，可以按 &lt;kbd>⌃A&lt;/kbd> 或 &lt;kbd>⌃E&lt;/kbd>。 要删除光标后当前行上的所有内容，请使用 &lt;kbd>⌃K&lt;/kbd>。 要调换光标左右两侧的字符的位置，请按 &lt;kbd>⌃T&lt;/kbd>。 要在当前行上居中视口，请按 &lt;kbd>⌃L&lt;/kbd>。 像这样的快捷用法比使用方向键更快，后者需要将手指从键盘的主行移开。&lt;/p>
&lt;p>下表比较了 Emacs 按键绑定与 &lt;abbr class="abbr">MacOS&lt;/abbr> 按键绑定（类似 Emacs 的子集）。 对于 &lt;abbr class="abbr">MacOS&lt;/abbr> 快捷键，我们使用常用符号来表示 Command &lt;kbd>⌘&lt;/kbd>、Shift &lt;kbd>⇧&lt;/kbd>、Option &lt;kbd>⌥&lt;/kbd>、Control &lt;kbd>⌃&lt;/kbd>、Caps Lock &lt;kbd>⇪&lt;/kbd>、Delete &lt;kbd>⌫&lt;/kbd> 和 Function &lt;kbd>Fn&lt;/kbd> 键，并且将所有字母用大写表示。&lt;/p>
&lt;p>Emacs 按键绑定以 Control &lt;kbd>C&lt;/kbd>、Meta (Alt) &lt;kbd>M&lt;/kbd>、Shift &lt;kbd>S&lt;/kbd> 前缀和 Delete &lt;kbd>DEL&lt;/kbd> 键，并且将所有字母用小写表示。&lt;/p>
&lt;h2 id="emacs-和-abbr-classabbrmacosabbr-键盘快捷键对比">Emacs 和 &lt;abbr class="abbr">MacOS&lt;/abbr> 键盘快捷键对比&lt;/h2>
&lt;table>
&lt;colgroup>
&lt;col style="text-align:left;">
&lt;col style="text-align:left;">
&lt;col style="text-align:left;">
&lt;col style="text-align:left;">
&lt;col style="text-align:left;">
&lt;/colgroup>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left;">对象&lt;/th>
&lt;th style="text-align:left;">方向&lt;/th>
&lt;th style="text-align:left;">Emacs&lt;/th>
&lt;th style="text-align:left;" colspan="2">&lt;abbr class="abbr">MacOS&lt;/abbr>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left;" colspan="5">&lt;strong>光标移动:&lt;/strong> 移动光标 by character, word, line, etc.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;" rowspan="2">char&lt;/td>
&lt;td style="text-align:left;">left&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-b&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃B&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>←&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;">right&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-f&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃F&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>→&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;" rowspan="2">word&lt;/td>
&lt;td style="text-align:left;">left&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>M-b&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃⌥B&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌥←&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;">right&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>M-f&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃⌥F&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌥→&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;" rowspan="4">line&lt;/td>
&lt;td style="text-align:left;">begin&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-a&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃A&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌘←&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;">end&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-e&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃E&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌘→&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;">up&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-p&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃P&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>↑&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;">down&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-n&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃N&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>↓&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;" rowspan="2">doc&lt;/td>
&lt;td style="text-align:left;">begin&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>M-&amp;lt;&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌘↑&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;">end&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>M-&amp;gt;&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌘↓&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left;" colspan="5">&lt;strong>文本选中:&lt;/strong> 扩展选中文本 by character, word, paragraph, and line&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;" rowspan="2">char&lt;/td>
&lt;td style="text-align:left;">left&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-b&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃⇧B&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⇧←&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;">right&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-f&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃⇧F&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⇧→&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;" rowspan="2">word&lt;/td>
&lt;td style="text-align:left;">left&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>M-b&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃⌥⇧B&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌥⇧←&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;">right&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>M-f&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃⌥⇧F&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌥⇧→&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;" rowspan="4">line&lt;/td>
&lt;td style="text-align:left;">begin&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-a&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃⇧A&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⇧⌘←&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;">end&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-e&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃⇧E&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⇧⌘→&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;">up&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-p&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃⇧P&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⇧↑&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;">down&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-n&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃⇧N&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⇧↓&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left;" colspan="5">&lt;strong>文本删除:&lt;/strong> 移除 characters, words, and lines&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;" rowspan="2">char&lt;/td>
&lt;td style="text-align:left;">left&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-h&lt;/kbd>, &lt;kbd>DEL&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃H&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌫&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;">right&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-d&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃D&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;" rowspan="2">word&lt;/td>
&lt;td style="text-align:left;">left&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>M-DEL&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌥⌫&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;">right&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>M-d&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>Fn&lt;/kbd>+&lt;kbd>⌥⌫&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;" rowspan="2">line&lt;/td>
&lt;td style="text-align:left;">backwards&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C–0 C-k&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌘⌫&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;">forwards&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-k&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃K&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left;" colspan="5">&lt;strong>搜索:&lt;/strong> 查找文本和在结果间移动&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;" rowspan="3">result&lt;/td>
&lt;td style="text-align:left;">first&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-s&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌘F&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;">next&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-s&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌘G&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;">previous&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-r&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⇧⌘G&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left;" colspan="5">&lt;strong>滚动:&lt;/strong> 滚动编辑窗口&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;" rowspan="3">page&lt;/td>
&lt;td style="text-align:left;">up&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>M-v&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>Fn&lt;/kbd>+&lt;kbd>↑&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;">down&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-v&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃V&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>Fn&lt;/kbd>+&lt;kbd>↓&lt;/kbd>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;">recenter&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-l&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃L&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left;" colspan="5">&lt;strong>杂项:&lt;/strong> 其他的插入、编辑等操作&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;">char&lt;/td>
&lt;td style="text-align:left;">transpose&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-t&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃T&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;">line&lt;/td>
&lt;td style="text-align:left;">insert&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-o&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃O&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;">&lt;/td>
&lt;td style="text-align:left;">kill&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-w&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃K&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left;">&lt;/td>
&lt;td style="text-align:left;">yank&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>C-y&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;kbd>⌃Y&lt;/kbd>&lt;/td>
&lt;td style="text-align:left;">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/EventOverview/TextDefaultsBindings/TextDefaultsBindings.html">Text System Defaults and Key Bindings&lt;/a> from the Cocoa Event Handling Guide in the Mac Developer Library.&lt;/li>
&lt;li>&lt;a href="https://github.com/nileshk/mac-configuration/blob/99eef47cd434fd3d6f4f1f9e2f50321f32179b88/Library/KeyBindings/DefaultKeyBinding.dict">Additional Emacs keyboard shortcuts&lt;/a> via a &lt;code>DefaultKeyBinding.dict&lt;/code> file on GitHub that can be placed in &lt;code>~/Library/KeyBindings&lt;/code>.&lt;/li>
&lt;/ul>
- /posts/emacs-style-keyboard-shortcut-of-macos/ -</description></item><item><title>qBittorrent 的一些事儿</title><link>/posts/usage-of-qbittorrent/</link><pubDate>Fri, 22 Apr 2022 00:00:00 +0800</pubDate><guid>/posts/usage-of-qbittorrent/</guid><description>Magical trees, take me home. /posts/usage-of-qbittorrent/ -&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>大学4年即将结束，回想这段时间。有时一个机缘巧合，我们就会被吸引并走进一个新的世界。PT就是我在大一期间认识到的，这种Freeeee的感觉太好了。后来组了自己的NAS，装入大容量硬盘，开启我的下载做种之路。&lt;/p>
&lt;p>有时会遇到种子掉线的问题，虽然出现的频率很低，但每次出现都让人困恼不已。具体情况是因为torrent下载工具和NAS不在同一个设备上，每当突然掉电后，恢复启动的torrent下载工具无法确定种子进度，于是种子进度干脆显示成0%。要想恢复做种进度，需要对所有种子重新进行散列检测。&lt;/p>
&lt;p>对于数以TB的文件，重新检测不仅需要大量的时间，而且会消耗大量的硬盘写入量，这对无论哪种硬盘都是一个灾难。&lt;/p>
&lt;p>之前开发过qBittorrent和uTorrent的备份工具，没有达到预期效果。&lt;/p>
&lt;p>今天看到了&lt;a href="https://tomorrow505.xyz/%E5%9F%BA%E4%BA%8Eqbittorrentapi%E5%AE%9E%E7%8E%B0%E6%89%B9%E9%87%8F%E5%8A%A0%E8%BD%BD%E7%A7%8D%E5%AD%90%E8%B7%B3%E6%A3%80/">这篇文章&lt;/a>，感觉很有参考意义。本文就是在此基础上做的一点修改。&lt;/p>
&lt;h2 id="qbittorrent-api">qbittorrent-api&lt;/h2>
&lt;p>&lt;a href="https://github.com/rmartin16/qbittorrent-api">qbittorrent-api&lt;/a> 是qBittorrent Web API的Python实现。&lt;a href="https://qbittorrent-api.readthedocs.io/en/latest/introduction.html">RTD&lt;/a>&lt;/p>
&lt;p>它支持qBittorrent v4.1.0+版本，基本实现了所有API。&lt;/p>
&lt;p>支持的版本：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">from&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">qbittorrentapi&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> Version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>versions = Version.supported_app_versions()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#658b00">print&lt;/span>(&lt;span style="color:#658b00">sorted&lt;/span>(versions))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22"># [&amp;#39;v4.1.0&amp;#39;, &amp;#39;v4.1.1&amp;#39;, &amp;#39;v4.1.2&amp;#39;, &amp;#39;v4.1.3&amp;#39;, &amp;#39;v4.1.4&amp;#39;, &amp;#39;v4.1.5&amp;#39;, &amp;#39;v4.1.6&amp;#39;, &amp;#39;v4.1.7&amp;#39;, &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22"># &amp;#39;v4.1.8&amp;#39;, &amp;#39;v4.1.9&amp;#39;, &amp;#39;v4.1.9.1&amp;#39;, &amp;#39;v4.2.0&amp;#39;, &amp;#39;v4.2.1&amp;#39;, &amp;#39;v4.2.2&amp;#39;, &amp;#39;v4.2.3&amp;#39;, &amp;#39;v4.2.4&amp;#39;, &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22"># &amp;#39;v4.2.5&amp;#39;, &amp;#39;v4.3.0&amp;#39;, &amp;#39;v4.3.0.1&amp;#39;, &amp;#39;v4.3.1&amp;#39;, &amp;#39;v4.3.2&amp;#39;, &amp;#39;v4.3.3&amp;#39;, &amp;#39;v4.3.4.1&amp;#39;, &amp;#39;v4.3.5&amp;#39;, &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22"># &amp;#39;v4.3.6&amp;#39;, &amp;#39;v4.3.7&amp;#39;, &amp;#39;v4.3.8&amp;#39;, &amp;#39;v4.3.9&amp;#39;, &amp;#39;v4.4.0&amp;#39;, &amp;#39;v4.4.1&amp;#39;, &amp;#39;v4.4.2&amp;#39;]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>qBittorrent有许多版本，有些版本API变化很大。&lt;a href="https://github.com/qbittorrent/qBittorrent/wiki#user-content-webui-api">官方WIKI&lt;/a>中将WebUI API划为三个版本。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>State&lt;/th>
&lt;th>Version&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Current&lt;/td>
&lt;td>qBittorrent v4.1+&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Previous&lt;/td>
&lt;td>qBittorrent v3.2.0-v4.0.4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Obsolete&lt;/td>
&lt;td>qBittorrent v3.1.x&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>有一些PT站点限定使用&lt;code>v3.*.*&lt;/code>版本，这样的话，就需要自己更新API了。&lt;/p>
&lt;p>例如&lt;/p>
&lt;ul>
&lt;li>&lt;code>v3.*.*&lt;/code>的login接口为 &lt;code>http://localhost:8080/login&lt;/code>&lt;/li>
&lt;li>&lt;code>v4.1.*&lt;/code>的login接口为&lt;code>http://localhost:8080/api/v2/auth/login&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>要寻找合适的版本，参考PT站的常见问题和&lt;a href="https://sourceforge.net/projects/qbittorrent/files/qbittorrent-win32/">sourceforge&lt;/a>.&lt;/p>
&lt;h2 id="skip-hash-detection">Skip hash detection&lt;/h2>
&lt;h3 id="bug-fix">Bug fix&lt;/h3>
&lt;p>根据&lt;a href="https://github.com/7sDream/torrent_parser/issues/11">torrent_parser issue#11&lt;/a>,&lt;/p>
&lt;p>torrent_parser.py#L46: &lt;code>from typing_extensions import OrderedDict&lt;/code>&lt;/p>
&lt;p>这一行是误加入，运行前应该手动在源码中删除。&lt;/p>
&lt;p>&lt;code>BitTorrent&lt;/code>fastresume文件的解析包&lt;code>bencode&lt;/code>似乎不支持python3了，这里使用&lt;code>bencodepy&lt;/code>作为替代。&lt;/p>
&lt;h3 id="full-code">Full code&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">from&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">qbittorrentapi&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> Client, LoginFailed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">torrent_parser&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">tp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">from&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">yaml&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> load
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">os&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">hashlib&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">bencodepy&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">from&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">yaml&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> CLoader &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> Loader
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">except&lt;/span> &lt;span style="color:#008b45;font-weight:bold">ImportError&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">from&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">yaml&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> Loader
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">def&lt;/span> &lt;span style="color:#008b45">get_qb&lt;/span>(config):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#228b22"># 获取客户端实例&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> qb = Client(host=&lt;span style="color:#cd5555">&amp;#39;&lt;/span>&lt;span style="color:#cd5555">%s&lt;/span>&lt;span style="color:#cd5555">:&lt;/span>&lt;span style="color:#cd5555">%s&lt;/span>&lt;span style="color:#cd5555">&amp;#39;&lt;/span> % (config[&lt;span style="color:#cd5555">&amp;#39;ip&amp;#39;&lt;/span>], config[&lt;span style="color:#cd5555">&amp;#39;port&amp;#39;&lt;/span>]), username=config[&lt;span style="color:#cd5555">&amp;#39;user&amp;#39;&lt;/span>], password=config[&lt;span style="color:#cd5555">&amp;#39;pwd&amp;#39;&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#228b22"># 客户端进行登录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> qb.auth_log_in()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">except&lt;/span> LoginFailed &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#658b00">print&lt;/span>(e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#228b22"># 输出客户端信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#658b00">print&lt;/span>(&lt;span style="color:#cd5555">f&lt;/span>&lt;span style="color:#cd5555">&amp;#39;qBittorrent: &lt;/span>&lt;span style="color:#cd5555">{&lt;/span>qb.app.version&lt;span style="color:#cd5555">}&lt;/span>&lt;span style="color:#cd5555">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#658b00">print&lt;/span>(&lt;span style="color:#cd5555">f&lt;/span>&lt;span style="color:#cd5555">&amp;#39;qBittorrent Web API: &lt;/span>&lt;span style="color:#cd5555">{&lt;/span>qb.app.web_api_version&lt;span style="color:#cd5555">}&lt;/span>&lt;span style="color:#cd5555">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#658b00">print&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">return&lt;/span> qb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22"># 根据种子路径获取其hash值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">def&lt;/span> &lt;span style="color:#008b45">get_hash&lt;/span>(filename):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">with&lt;/span> &lt;span style="color:#658b00">open&lt;/span>(filename, &lt;span style="color:#cd5555">&amp;#39;rb&amp;#39;&lt;/span>) &lt;span style="color:#8b008b;font-weight:bold">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> torrent_data = f.read()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> metainfo = bencodepy.decode(torrent_data)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> info = metainfo[&lt;span style="color:#cd5555">b&lt;/span>&lt;span style="color:#cd5555">&amp;#39;info&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">return&lt;/span> hashlib.sha1(bencodepy.encode(info)).hexdigest()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22"># 加载配置文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">def&lt;/span> &lt;span style="color:#008b45">load_config&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data = load(&lt;span style="color:#658b00">open&lt;/span>(&lt;span style="color:#cd5555">&amp;#39;./config.yml&amp;#39;&lt;/span>, &lt;span style="color:#cd5555">&amp;#39;rb&amp;#39;&lt;/span>), Loader=Loader)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">return&lt;/span> data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22"># 获取种子文件列表信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">def&lt;/span> &lt;span style="color:#008b45">pars_torrent&lt;/span>(path):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file_paths = []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data = tp.parse_torrent_file(path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> info = &lt;span style="color:#658b00">dict&lt;/span>(data[&lt;span style="color:#cd5555">&amp;#39;info&amp;#39;&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">if&lt;/span> &lt;span style="color:#cd5555">&amp;#39;files&amp;#39;&lt;/span> &lt;span style="color:#8b008b">in&lt;/span> info.keys():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> item &lt;span style="color:#8b008b">in&lt;/span> info[&lt;span style="color:#cd5555">&amp;#39;files&amp;#39;&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file_paths.append(info[&lt;span style="color:#cd5555">&amp;#39;name&amp;#39;&lt;/span>] + &lt;span style="color:#cd5555">&amp;#39;&lt;/span>&lt;span style="color:#cd5555">\\&lt;/span>&lt;span style="color:#cd5555">&amp;#39;&lt;/span> + &lt;span style="color:#cd5555">&amp;#39;&lt;/span>&lt;span style="color:#cd5555">\\&lt;/span>&lt;span style="color:#cd5555">&amp;#39;&lt;/span>.join(item[&lt;span style="color:#cd5555">&amp;#39;path&amp;#39;&lt;/span>]))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file_paths.append(info[&lt;span style="color:#cd5555">&amp;#39;name&amp;#39;&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">return&lt;/span> file_paths
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22"># 主程序入口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">if&lt;/span> __name__ == &lt;span style="color:#cd5555">&amp;#39;__main__&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user_info = load_config()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> qb = get_qb(user_info[&lt;span style="color:#cd5555">&amp;#39;qb&amp;#39;&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> save_paths = user_info[&lt;span style="color:#cd5555">&amp;#39;save_path&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#228b22"># 输入种子所在目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> torrents_path = &lt;span style="color:#658b00">input&lt;/span>(&lt;span style="color:#cd5555">&amp;#34;请输入种子保存路径&amp;gt;&amp;gt;&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> files = os.listdir(torrents_path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#228b22"># 循环处理种子信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> file &lt;span style="color:#8b008b">in&lt;/span> files:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">if&lt;/span> &lt;span style="color:#8b008b">not&lt;/span> file.endswith(&lt;span style="color:#cd5555">&amp;#39;.torrent&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#658b00">print&lt;/span>(&lt;span style="color:#cd5555">&amp;#34;*********************** 当前处理种子文件：&lt;/span>&lt;span style="color:#cd5555">%s&lt;/span>&lt;span style="color:#cd5555"> ***********************&amp;#34;&lt;/span> % file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> torrent_path = os.path.join(torrents_path, file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#228b22"># 种子已经存在于客户端，跳过&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hash_value = get_hash(torrent_path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> torrent = qb.torrents_info(torrent_hashes=hash_value)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">if&lt;/span> &lt;span style="color:#658b00">len&lt;/span>(torrent) == &lt;span style="color:#b452cd">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#658b00">print&lt;/span>(&lt;span style="color:#cd5555">&amp;#34;当前种子已经存在于客户端，跳出……&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#228b22"># 判断种子文件是否存在于常用的保存路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> torrent_files = pars_torrent(torrent_path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#658b00">print&lt;/span>(&lt;span style="color:#cd5555">&amp;#39;种子文件包含&lt;/span>&lt;span style="color:#cd5555">%d&lt;/span>&lt;span style="color:#cd5555">个文件&amp;#39;&lt;/span>%&lt;span style="color:#658b00">len&lt;/span>(torrent_files))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> save_path &lt;span style="color:#8b008b">in&lt;/span> save_paths:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#8b008b;font-weight:bold">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> torrent_file &lt;span style="color:#8b008b">in&lt;/span> torrent_files:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">if&lt;/span> &lt;span style="color:#8b008b">not&lt;/span> os.path.isfile(os.path.join(save_path, torrent_file)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#658b00">print&lt;/span>(&lt;span style="color:#cd5555">&amp;#39;&lt;/span>&lt;span style="color:#cd5555">%s&lt;/span>&lt;span style="color:#cd5555"> 文件不存在，跳出……&amp;#39;&lt;/span> % os.path.join(save_path, torrent_file))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag = &lt;span style="color:#8b008b;font-weight:bold">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">if&lt;/span> flag == &lt;span style="color:#8b008b;font-weight:bold">True&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> qb.torrents_add(torrent_files=torrent_path, save_path=save_path, is_skip_checking=&lt;span style="color:#8b008b;font-weight:bold">True&lt;/span>, is_paused=&lt;span style="color:#8b008b;font-weight:bold">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#658b00">print&lt;/span>(&lt;span style="color:#cd5555">&amp;#39;种子检验完毕，保存路径为&lt;/span>&lt;span style="color:#cd5555">%s&lt;/span>&lt;span style="color:#cd5555">，已经添加！！&amp;#39;&lt;/span> % save_path)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code># result
qBittorrent: v4.1.4
qBittorrent Web API: 2.1.1
*********************** 当前处理种子文件：Severance.S01.1080p.ATVP.WEB-DL.DDP5.1.Atmos.H.264-TEPES.torrent ***********************
种子文件包含9个文件
种子检验完毕，保存路径为Y:\Transmission\DOWNLOADS，已经添加！！
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">qb&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">ip&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#cd5555">&amp;#39;192.168.123.189&amp;#39;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">port&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#cd5555">&amp;#39;12345&amp;#39;&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">user&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>admin&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">pwd&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>adminadmin&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#8b008b;font-weight:bold">save_path&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#8b008b;font-weight:bold">Y&lt;/span>:\Transmission\DOWNLOADS&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>- /posts/usage-of-qbittorrent/ -</description></item><item><title>《远山的呼唤》只是未到伤心处</title><link>/posts/a-distant-cry-from-spring/</link><pubDate>Sat, 16 Apr 2022 00:00:00 +0800</pubDate><guid>/posts/a-distant-cry-from-spring/</guid><description>Magical trees, take me home. /posts/a-distant-cry-from-spring/ -&lt;p>该片由山田洋次执导，倍赏千惠子、高仓健、吉冈秀隆等主演，于1980年3月15日出品。&lt;/p>
&lt;p>日本的北海道，差不多类似于国内的大西北。在电影拍摄的年代，这里仍然是一片苦寒之地。土地广袤，但产出贫乏，狂风骤雨的夏季，雪虐风饕的冬季，无不摧残着生活在这里的人们。&lt;/p>
&lt;p>女主人公风见民子既要独自支撑养牛场，还要抚养儿子武志。年轻时的她为了爱情，毅然断绝家里的联系，与一个即将去北海道开荒的人私奔。两人白手起家建立起这座农场，本来日子虽然苦，却还过得去。但几年前，丈夫撒手人寰，农场一下成了难以支撑的负担。她，勤劳、倔强、柔弱却坚强，默默承受所有的苦楚，却能用一颗善良的心教育孩子。&lt;/p>
&lt;p>表弟胜男带着新婚妻子佳代子来农场看望。饭桌上，民子开玩笑地说着表弟小时候的糗事，胜男说着表姐高中时多么年轻漂亮，气氛是轻松喜悦的。临别时，胜男笑着对表姐说：“祝你幸福”。但镜头随着汽车渐行渐远后，佳代子察觉到胜男异样的神情。眼泪湿润了胜男的脸庞，他感叹道：“表姐，过得真辛苦啊”。&lt;/p>
&lt;p>含蓄地表达，却刻画出了最动人的深情。内心深处最柔软的角落都被触动，在酸楚中一遍又一遍回味着最本初的真情。&lt;/p>
&lt;p>男主人公田岛耕作，结实肯干、沉默寡言。他用宽阔的肩膀为民子撑起了一片天，如同一只默默耕耘的黄牛一般，沉默，不求回报。他替民子照顾牲畜、教育武志要像男子汉一样勇敢。在武志心里，他慢慢地填补了父亲的缺失。潜移默化中，他的英武、潇洒使民子产生了一种暧昧的情愫。在他告知即将离开的那个夜晚，民子再也无法保持坚强。她卸下了自己勇敢无惧，将柔弱的一面暴露出来。是他给了民子久违的安全感，民子扑在他怀里，恳求不要离去。但他还是克制着自己的感情，还是沉默着，始终保持一段距离。&lt;/p>
&lt;p>之所以隐身于这个人烟稀少的小镇，勤勤恳恳的过着不求回报的生活，是因为一次冲动。彼时，他曾经的妻由于偿还不清贷款而自缢，在妻子的灵堂前他忍受不了债主对妻子的谩骂，冲动下铸成大错，自那以后就亡命天涯。但在这里，他重新找到了家人的感觉。但理性告诉他，他没有资格再享受这种快乐。&lt;/p>
&lt;p>“叔叔，你去哪儿啊？”武志追在警车后边跑边喊，他并不知道内情，只是牵挂这个像父亲一样的人。田岛挥了挥手，以歉意、困窘的眼神回应，然后进入了警车。&lt;/p>
&lt;p>镜头一转，又是一个冬天。风雪吹破农场窗户的塑料纸，农场的大门敞开着，一片破败萧条。&lt;/p>
&lt;p>火车上，两名警员押送着田岛前去服刑，此时正停在农场附近的火车站。出乎意料地，她找到了被判四年有期徒刑并正被押去服刑的他。两人似乎不知道要如何开口，虻田急中生智，以一种借喻的口吻和民子对话，完成了民子对田岛亲情和爱情的告白。&lt;/p>
&lt;blockquote>
&lt;p>虻田问道：太太，好久不见，听说您不养奶牛，到镇上去工作了。&lt;/p>
&lt;p>此时，民子望向耕作回答：对。&lt;/p>
&lt;p>虻田又问：听说您跟您儿子在等您丈夫回来，要等他好几年，这是真的吗？&lt;/p>
&lt;p>民子笃定温柔地点了点头，临座一直望着民子的耕作早已眼含泪光。&lt;/p>
&lt;p>虻田回复并又问：真了不起啊！生活上有没有困难呐？&lt;/p>
&lt;p>民子答：有虻田先生照顾。&lt;/p>
&lt;p>虻田：啊，那混蛋，是他呀，是他在照顾你们啦？&lt;/p>
&lt;p>民子又肯定地答到：是。&lt;/p>
&lt;p>虻田：那好啊，太好呐！&lt;/p>
&lt;/blockquote>
&lt;p>说完，虻田掩面而泣。田岛已是泪如雨下，他接过民子的手绢擦干眼泪、对着民子郑重地点头，接受了民子的告白。火车继续急驰，窗外一片白茫茫的大地。&lt;/p>
&lt;p>如此含蓄、简单、又温情的告白来自导演山田洋次对电影情节匠心的把握。没有刻意催泪，他只是在情节的自然发展中，把东方人对爱情的表白，用最生活、最朴实的仪式感呈现出来，是东方式的；是非常契合整个影片北海道牧场天高云远的基调的；是符合民子、耕作这样在日常劳作中情愫渐生、但又羞于言语直接表达的人设的。朝夕相处的日常已让耕作成为了自己生活的一部分，再含蓄的民子，在面对即将得到却又马上要失去的爱情的时候，她也必须要做点什么以告慰自己内心的呼唤。哪怕这意味着等待，但有等待就有希望。于是，在虻田的帮助下，她告白了耕作，这样的告白是属于普通人也许一生一次的伟大之举。&lt;/p>
- /posts/a-distant-cry-from-spring/ -</description></item><item><title>《希腊古瓮颂》浅析</title><link>/posts/impression-of-ode-on-a-grecian-urn/</link><pubDate>Fri, 14 Jan 2022 00:00:00 +0800</pubDate><guid>/posts/impression-of-ode-on-a-grecian-urn/</guid><description>Magical trees, take me home. /posts/impression-of-ode-on-a-grecian-urn/ -&lt;blockquote>
&lt;p>&lt;strong>希腊古瓮颂&lt;/strong>&lt;/p>
&lt;p>〔英国〕济慈
（屠岸 译）&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>你——“平静”的保持着童贞的新娘，&lt;br>
“沉默”和漫长的“时间”领养的少女，&lt;br>
山林的历史家，你如此美妙地叙讲&lt;br>
如花的故事，胜过我们的诗句：&lt;br>
绿叶镶边的传说在你的身上缠，&lt;br>
讲的可是神，或人，或神人在一道，&lt;br>
活跃在滕坡，或者阿卡狄谷地？&lt;br>
什么人，什么神？什么样姑娘不情愿？&lt;br>
怎样疯狂的追求？竭力的脱逃？&lt;br>
什么笛，铃鼓？怎样忘情的狂喜？&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>听见的乐曲是悦耳，听不见的旋律&lt;br>
更甜美；风笛呵，你该继续吹奏；&lt;br>
不是对耳朵，而是对心灵奏出&lt;br>
无声的乐曲，送上更多的温柔：&lt;br>
树下的美少年，你永远不停止歌唱，&lt;br>
那些树木也永远不可能凋枯；&lt;br>
大胆的情郎，你永远得不到一吻，&lt;br>
虽然接近了目标——你可别悲伤，&lt;br>
她永远不衰老，尽管你摘不到幸福，&lt;br>
你永远在爱着，她永远美丽动人!&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>啊，幸运的树枝!你永远不掉下&lt;br>
你的绿叶，永不向春光告别；&lt;br>
幸福的乐手，你永远不知道疲乏，&lt;br>
永远奏出永远新鲜的音乐；&lt;br>
幸福的爱情!更加幸福的爱情!&lt;br>
永远热烈，永远等待着享受，&lt;br>
永远喘息着，永远是青春年少，&lt;br>
这一切情态，都这样超凡入圣，&lt;br>
永远不会让心灵餍足，发愁，&lt;br>
不会让额头发烧，舌蔽唇焦。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>这些前来祭祀的都是什么人？&lt;br>
神秘的祭司，你的牛向上天哀唤，&lt;br>
让花环挂满在她那光柔的腰身，&lt;br>
你要牵她去哪一座青葱的祭坛？&lt;br>
这是哪一座小城，河边的，海边的，&lt;br>
还是靠山的，筑一座护卫的城砦——&lt;br>
居尼们倾城而出，赶清早去敬神？&lt;br>
小城呵，你的大街小巷将永远地&lt;br>
寂静无声，没有一个灵魂会回来&lt;br>
说明你何以从此变成了荒城。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>啊，雅典的形状!美的仪态!&lt;br>
身上雕满大理石少女和男人，&lt;br>
树林伸枝柯，脚下倒伏着草莱：&lt;br>
你呵，缄口的形体!你冷嘲如“永恒”&lt;br>
教我们超脱思虑。冷色的牧歌!&lt;br>
等老年摧毁了我们这一代，那时，&lt;br>
你将仍然是人类的朋友，&lt;br>
并且会见到另一些哀愁，你会这样说：&lt;br>
“美即是真，真即是美”——这就是&lt;br>
我们在地上所知道、该知道的一切。&lt;/p>
&lt;/blockquote>
&lt;p>英国浪漫主义诗人济慈于1819年5月写下这首富有创造力的《希腊古瓮颂》，由于十四行诗的形式和他想要的音调不符，于是他开始发展自己的颂歌类型，这首颂歌是最早使用这种新形式的作品之一，它由五节组成，每节十行。颂歌的形式使诗人能更多地描绘古瓮上场景，并为提出疑问和发出感叹留出空间。&lt;/p>
&lt;p>在每一节，济慈都描绘或谈论了古瓮上的画面，特别是两个着重描述的场景，一个是情人追求爱人，一个是村民与牧师聚集祭祀。这两个场景都隐含着死亡与永生这一对范畴。在颂歌的最后，济慈提出“‘美即是真，真即是美’——这就是我们在地上所知道、也该知道的一切。”，这句话后来引起了许多阐释者的讨论。总之，全诗的一条明线是生命短促，情感易变，唯有艺术长存。下面结合颂词大意谈谈所思所感。&lt;/p>
&lt;h2 id="颂歌大意">颂歌大意&lt;/h2>
&lt;p>这是一首复杂而又神秘的颂歌，它的赞颂对象是一只希腊古瓮。这只古瓮上绘制着引人神思的田园画卷。世上有许多赞颂乡村场景的诗歌，却没一首有古瓮上的画卷描述得好。这只经历漫长时间、一直保持缄默的古瓮，就像一个亭亭玉立着、静默着的少女。她不曾受到人世纷争的搅扰和岁月无情的摧残。即使穿越时空，形体依旧完美。&lt;/p>
&lt;p>诗人注视着古瓮，想知道少女讲述了一个怎样的故事。画中的场景是在希腊哪里？她所描绘的人物是人吗，还是神呢，还是人神一道？那个不情愿的女性是什么身份？场景中疯狂追求的人和竭力脱逃的人是否处于一场狂欢之中？笛声和铃鼓在演奏什么样的音乐？&lt;/p>
&lt;p>在这个精美的古瓮面前，诗人被迷住了，顷刻间便步入了由思维构筑的美的殿堂。那幅画卷开始变得栩栩如生，拿着风笛的人物似乎也将音乐送进了现实。诗人说能听见的乐曲是悦耳的，但听不见的旋律更好。画卷中的人啊，请你继续演奏风笛，即使耳朵无法听到，但无声的旋律能吹入心灵。&lt;/p>
&lt;p>吹笛人永远不会停止吹笛——因为古瓮上的场景永远停在了这一刻，树木也永远不会落下他们的叶子。情郎几乎要吻到那位姑娘，但他们的嘴唇却永远无法接触。对此，诗人俏皮地告诉情郎，你无须悲伤。虽然吻永远不会发生，但你们将永远热恋如初，而她将永远美丽。&lt;/p>
&lt;p>诗人感叹树枝是幸运的，因为叶子永远不会落下，而它也春光永驻。吹笛人也是幸福的，因为他的歌曲将永远清新悦耳，永远流传。最幸福的是恋人们的爱情，他们的心永远热烈地跳动，永远年轻；远远超越活人的情感，绝不会使心灵悲伤、厌倦，不会让头脑发烧、嘴唇焦渴，不会经历恋人的痛苦。&lt;/p>
&lt;p>古瓮上那队牵着牛前往祭坛的人，又是个怎么样的故事？诗人疑惑：神秘的祭司，你带领的这些人是谁？你要把这身披花环，朝天哞叫的小牛牵到哪个青葱的祭坛？这些人来自哪个小镇？傍河傍海抑或是有水塘的乡村？居民们在清晨前往敬神，那小镇的街道便永远清静，再也没有一个灵魂返回。&lt;/p>
&lt;p>凝视着古瓮上的这些形象，诗人发出感叹：哦，雅典的形象！美丽的姿态！这些男男女女，他们身边的林木和脚下的青草，这些静默的形象啊，你们就像永恒一样，使我们超越今天的思想：你雕刻出来的冰冷的牧歌，哪怕我们都在暮年中凋落，你仍将清新依旧！在另外一些人的忧伤中，你还会像朋友一样抚慰人们：“美即是真，真即是美，”这涵括你们所知道和所需要知道的一切。&lt;/p>
&lt;h2 id="关于死亡">关于死亡&lt;/h2>
&lt;p>瓮（Urn）原本是盛放骨灰的容器，这首颂歌有着诗人对永恒和死亡的复杂沉思。柏拉图的二元世界理论认为，世界由理念和现象构成。理念世界一成不变，永恒存在。而现象世界则会随着时间而消逝。以柏拉图的观点来看，死亡不过是形式的终结，灵魂将会不朽。对于死亡，济慈似乎没有在颂歌提出中明确的观点，他谈及了与死亡密切相关的“空虚”，当逐渐冰冷的古瓮无法提供热情后，他最终承认了死亡的不可否认。&lt;/p>
&lt;p>在颂词的开始，诗人形容古瓮是“沉默的”和“经过漫长时间领养的少女”，一股令人不安的神秘感已经开始形成。第二、三节中，古瓮上的人物显得幸福而无忧无虑，演奏中的恋人、吹笛的音乐家和丰富的大自然都在营造“快乐、幸福”的感觉，诗人还称赞古瓮上的恋人“永远富有活力，永远年轻”。但此时，更深的危机感开始产生。到第四节后，颂词的主题便不再那么热情，而是转为疑虑。神秘的牧师将小牛牵向祭坛，居民们聚集在牧师身旁。从此寂静无人的街道和没有一个灵魂居住的“荒凉”的城市，无不令人感到惊异。最终，诗人将评论转向现实，认为他们这代人将被“老年”所“摧毁”（waste）。&lt;/p>
&lt;p>不论是古瓮的制作者，还是古瓮上所描述的那个时代都早已消逝，生命转瞬即逝，令人感到恐惧。但古瓮上的人物却如此鲜活，描绘的少女永远“不会褪色”，田园里的树木春光永驻，这样看又会产生一种不朽的感觉。&lt;/p>
&lt;p>但画中的人物本身并不具有真正的活力，时间的停止不仅仅停止了死亡，也停止了生命。死亡不仅仅是生命的结束，而且是生命的一个独特部分。诗人对古瓮的渲染越是出色，越是让读者意识到，死亡不可避免。&lt;/p>
&lt;h2 id="艺术美与真理">艺术、美与真理&lt;/h2>
&lt;p>济慈在这首颂词中探讨了艺术、美和真理之间的密切关系。济慈认为：只有通过美，才能接近真理——通过艺术，人才能获得美。从颂诗中“诗人”的发展过程来说，他观察了古瓮这件精美的艺术品，陶醉在“美”的世界中，最后得出了“美即是真，真即是美”的真理。颂诗没有明确说明艺术、美与真理之间的关系，但暗含这三者之间相互依赖，彼此密不可分。&lt;/p>
&lt;p>这首颂歌著名的结尾——“美即是真，真即是美”，在后世引起了许多争论，但至少在本诗的语境下，“美”与“真”是能相互转换、近乎等同的。而艺术的作用是创造这种“真”与“美”。正如古瓮的制造者试图描绘这个世界的真实与美丽，这首颂词也试图将“真”与“美”带入它对古瓮的描述当中。&lt;/p>
&lt;p>柏拉图在《会饮篇》提出了“永恒的，无始无终，不生不灭”的理式美，一切美的事物都以它为源泉，有了它，那一切美的事物才成其为美。而事物美不过是它的幻象、影子。在这首颂诗中，古瓮中的场景永远定格，这意味着这幅图画不仅是田园生活，而是已经成为一种“纯粹”的美——不必实际存在，也不会最终死亡或受到污染。古瓮的美代表了美本身，而不是对美的摹仿。在诗的最后，济慈认为美是人必须追求的东西。&lt;/p>
&lt;h2 id="解释柏拉图式的诗歌">解释柏拉图式的诗歌&lt;/h2>
&lt;p>在《理想国》第二卷中，柏拉图提出对价值观尚未定型的幼儿进行音乐教育。柏拉图希望艺术的存在服务于城邦利益，要求为艺术必须是真实的、敬神的、内容有益的。在第十卷中，柏拉图允许一些诗人留在“理想国”里，赞颂诸神和英雄人物。但诗歌作为一种“模仿性”的艺术，只能是一种适意的消遣，远离真理而不是接近真理。&lt;/p>
&lt;p>从多种方面分析，柏拉图轻贱艺术在理想国中的地位。他认为艺术无法对城邦提供益处，还会滋生欲望、放松人内心的理性节制。《希腊古瓮颂》全诗富有隐喻和神秘感，似乎并不符合柏拉图对诗歌的标准，难以说这是柏拉图式的诗歌。&lt;/p>
&lt;p>柏拉图在《理想国》中多次运用神话、象征和比喻的手法来说明他的思想，宽泛地说，这种隐喻的表现方式也是一种语言艺术。那么符合这种艺术风格，能否被称为柏拉图式的诗歌呢？新柏拉图主义往往强调神秘玄奥的元素，鼓励诗歌创作要暖昧晦涩，并有意使用神秘的、象征性的语言。&lt;/p>
&lt;p>如此的话，济慈的颂歌一定程度上符合新柏拉图主义流派的要求，因为其中使用到了隐喻的手法。&lt;/p>
- /posts/impression-of-ode-on-a-grecian-urn/ -</description></item><item><title>Android 抓包以及 mitmproxy</title><link>/posts/android-emulator-packet-capture-and-everything/</link><pubDate>Fri, 26 Nov 2021 02:37:41 +0800</pubDate><guid>/posts/android-emulator-packet-capture-and-everything/</guid><description>Magical trees, take me home. /posts/android-emulator-packet-capture-and-everything/ -&lt;h2 id="最佳实践">最佳实践&lt;/h2>
&lt;blockquote>
&lt;p>经过一段时间的研究，又有了新的看法。&lt;/p>
&lt;/blockquote>
&lt;p>准备以下两种工具：&lt;/p>
&lt;ul>
&lt;li>mitmproxy&lt;/li>
&lt;li>Android Emulator(MuMu, BlueStack &amp;hellip;)&lt;/li>
&lt;/ul>
&lt;h3 id="mitmproxy">mitmproxy&lt;/h3>
&lt;p>&lt;code>mitmproxy&lt;/code>最好使用&lt;a href="https://pypa.github.io/pipx/">pipx&lt;/a>安装。因为&lt;code>mitmproxy&lt;/code>运行在独立的&lt;code>venv&lt;/code>中，使用&lt;code>pipx&lt;/code>方便为&lt;code>mitmproxy&lt;/code>安装额外的python包。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>brew install pipx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pipx install mitmproxy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>最好按照提示说明，使用&lt;code>pipx ensurepath&lt;/code>修改环境变量。&lt;/p>
&lt;p>这样我们就可以为&lt;code>mitmproxy&lt;/code>安装额外的python包了。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pipx inject mitmproxy pycryptodome &lt;span style="color:#228b22"># 安装 pycryptodome 包，用于AES解码&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将浏览器代理设置到&lt;code>8080&lt;/code>端口，打开(mitm.it)[mitm.it]下载对应平台的证书。&lt;/p>
&lt;h3 id="android-emulator">Android Emulator&lt;/h3>
&lt;p>抓包之前有两个步骤：&lt;/p>
&lt;ol>
&lt;li>设置手动代理&lt;/li>
&lt;li>安装并信任自签名https证书&lt;/li>
&lt;/ol>
&lt;p>设置WiFi代理为主机&lt;code>8080&lt;/code>端口：&lt;/p>
&lt;p>&lt;img src="/img/Snipaste_2021-11-26_01-17-55.png" alt="Snipaste_2021-11-26_01-12-38">&lt;/p>
&lt;p>以下是简化的脚本&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>，先看看&lt;code>adb devices&lt;/code>信息，是否已经连接。如果没有成功连接需要&lt;code>adb kill-server&lt;/code>，再重试几次。或者参照后文&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>。
直接运行以下脚本&lt;code>./push.sh YOUR_CRT.crt&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b">PEM_FILE_NAME&lt;/span>=&lt;span style="color:#00688b">$1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#658b00">echo&lt;/span> &lt;span style="color:#cd5555">&amp;#34;&lt;/span>&lt;span style="color:#00688b">$PEM_FILE_NAME&lt;/span>&lt;span style="color:#cd5555">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b">hash&lt;/span>=&lt;span style="color:#8b008b;font-weight:bold">$(&lt;/span>openssl x509 -inform PEM -subject_hash_old -in &lt;span style="color:#00688b">$PEM_FILE_NAME&lt;/span> | head -1&lt;span style="color:#8b008b;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b">OUT_FILE_NAME&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;&lt;/span>&lt;span style="color:#00688b">$hash&lt;/span>&lt;span style="color:#cd5555">.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cp &lt;span style="color:#00688b">$PEM_FILE_NAME&lt;/span> &lt;span style="color:#00688b">$OUT_FILE_NAME&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>openssl x509 -inform PEM -text -in &lt;span style="color:#00688b">$PEM_FILE_NAME&lt;/span> -out /dev/null &amp;gt;&amp;gt; &lt;span style="color:#00688b">$OUT_FILE_NAME&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#658b00">echo&lt;/span> &lt;span style="color:#cd5555">&amp;#34;Saved to &lt;/span>&lt;span style="color:#00688b">$OUT_FILE_NAME&lt;/span>&lt;span style="color:#cd5555">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>adb shell mount -o rw,remount,rw /system
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>adb push &lt;span style="color:#00688b">$OUT_FILE_NAME&lt;/span> /system/etc/security/cacerts/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>adb shell mount -o ro,remount,ro /system
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>adb reboot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果模拟器正常重启的话应该就可以了。&lt;/p>
&lt;h3 id="抓包">抓包&lt;/h3>
&lt;p>运行&lt;code>mitmweb&lt;/code>，通过web界面观察包的发送和接收。&lt;/p>
&lt;p>&lt;img src="/img/mitmweb.png" alt="123">&lt;/p>
&lt;p>&lt;code>mitmproxy&lt;/code> 是一个非常强大的工具，其用法如恒河沙数，无不天花乱坠。&lt;a href="https://docs.mitmproxy.org/stable/addons-examples/">官方文档提供的用例&lt;/a>很值得仔细参阅，这里只介绍一个简单的例子。&lt;/p>
&lt;p>&lt;code>ContentView&lt;/code>是显示&lt;code>request&lt;/code>或&lt;code>response&lt;/code>负载的界面。有时需要查看的&lt;code>payload&lt;/code>不是明文的&lt;code>json&lt;/code>或&lt;code>plain text&lt;/code>，默认情况下会以&lt;code>raw&lt;/code>格式显示。&lt;/p>
&lt;p>&lt;img src="/img/content_view.png" alt="content view">&lt;/p>
&lt;p>这样会很麻烦。&lt;/p>
&lt;p>所以可以考虑通过插件增加一个&lt;code>ContentView&lt;/code>的选项，让请求以我想要的方式显示。模仿&lt;a href="https://docs.mitmproxy.org/stable/addons-examples/#contentview">addons-examples/#contentview&lt;/a>，以挂载脚本的方式启动&lt;code>mitmweb -S decode.py&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">from&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">mitmproxy&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> contentviews, flow
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">from&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">mitmproxy&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> http
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">from&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">mitmproxy.contentviews.json&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> format_json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">from&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">Crypto.Cipher&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> AES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">base64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">hashlib&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">json&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">import&lt;/span> &lt;span style="color:#008b45;text-decoration:underline">random&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">class&lt;/span> &lt;span style="color:#008b45;font-weight:bold">ViewAESDecode&lt;/span>(contentviews.View):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name = &lt;span style="color:#cd5555">&amp;#34;AES decode&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">def&lt;/span> __call__(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data: &lt;span style="color:#658b00">bytes&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content_type: Optional[&lt;span style="color:#658b00">str&lt;/span>] = &lt;span style="color:#8b008b;font-weight:bold">None&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flow: Optional[flow.Flow] = &lt;span style="color:#8b008b;font-weight:bold">None&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> http_message: Optional[http.Message] = &lt;span style="color:#8b008b;font-weight:bold">None&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> **unknown_metadata,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jsdata = decrypt(data)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jsdata = json.loads(jsdata)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">return&lt;/span> &lt;span style="color:#cd5555">&amp;#34;AES decode&amp;#34;&lt;/span>, format_json(jsdata)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">def&lt;/span> &lt;span style="color:#008b45">render_priority&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data: &lt;span style="color:#658b00">bytes&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content_type: Optional[&lt;span style="color:#658b00">str&lt;/span>] = &lt;span style="color:#8b008b;font-weight:bold">None&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flow: Optional[flow.Flow] = &lt;span style="color:#8b008b;font-weight:bold">None&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> http_message: Optional[http.Message] = &lt;span style="color:#8b008b;font-weight:bold">None&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> **unknown_metadata,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">if&lt;/span> &lt;span style="color:#cd5555">&amp;#39;what I want&amp;#39;&lt;/span> &lt;span style="color:#8b008b">in&lt;/span> flow.request.host:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">return&lt;/span> &lt;span style="color:#b452cd">10&lt;/span> &lt;span style="color:#228b22"># 出现的权重，为10的话会在最前面&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">return&lt;/span> &lt;span style="color:#b452cd">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">def&lt;/span> &lt;span style="color:#008b45">decrypt&lt;/span>(data):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key = &lt;span style="color:#cd5555">&amp;#39;1234567890123456&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> iv = &lt;span style="color:#cd5555">&amp;#39;1234567890123456&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mode = AES.MODE_CBC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cryptor = AES.new(key, mode, iv)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data = base64.b64decode(data)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> decrypted = cryptor.decrypt(data)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8b008b;font-weight:bold">return&lt;/span> decrypted.decode(&lt;span style="color:#cd5555">&amp;#39;utf-8&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">def&lt;/span> &lt;span style="color:#008b45">load&lt;/span>(l):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> contentviews.add(view)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">def&lt;/span> &lt;span style="color:#008b45">done&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> contentviews.remove(view)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>结果如下：
&lt;img src="/img/content_result.png" alt="content view">&lt;/p>
&lt;h2 id="adb-无法连接的问题">ADB 无法连接的问题&lt;/h2>
&lt;p>打开USB调试。&lt;code>夜神&lt;/code>的USB调试并不通过默认的5037 端口与adb客户端通信，可能是考虑多开也许超过16个客户端的官方限制。&lt;/p>
&lt;p>一般情况下，只需以下步骤就能连接adb&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22"># WSL ubuntu 18.04&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wesley@WIN10:/mnt/c/Users/Vita/Desktop$ adb devices
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>List of devices attached
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wesley@WIN10:/mnt/c/Users/Vita/Desktop$ adb connect 127.0.0.1:62001
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>connected to 127.0.0.1:62001
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wesley@WIN10:/mnt/c/Users/Vita/Desktop$ adb devices
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>List of devices attached
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1:62001 device
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>虚拟机比较多时就无效了，需要手动找到端口&lt;sup id="fnref1:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22"># Powershell&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#658b00">PS &lt;/span>C:\Users\Vita&amp;gt; &lt;span style="color:#658b00">Get-Process&lt;/span> | &lt;span style="color:#658b00">where &lt;/span>name -like &lt;span style="color:#cd5555">&amp;#34;Nox*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Handles NPM(K) PM(K) WS(K) CPU(s) Id &lt;span style="color:#658b00">SI &lt;/span>ProcessName
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>------- ------ ----- ----- ------ -- -- -----------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#b452cd">1037&lt;/span> &lt;span style="color:#b452cd">184&lt;/span> &lt;span style="color:#b452cd">177620&lt;/span> &lt;span style="color:#b452cd">49000&lt;/span> &lt;span style="color:#b452cd">161.20&lt;/span> &lt;span style="color:#b452cd">28604&lt;/span> &lt;span style="color:#b452cd">1&lt;/span> Nox
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#b452cd">2006&lt;/span> &lt;span style="color:#b452cd">173&lt;/span> &lt;span style="color:#b452cd">1046392&lt;/span> &lt;span style="color:#b452cd">46020&lt;/span> &lt;span style="color:#b452cd">251.53&lt;/span> &lt;span style="color:#b452cd">4716&lt;/span> &lt;span style="color:#b452cd">1&lt;/span> NoxVMHandle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#b452cd">3058&lt;/span> &lt;span style="color:#b452cd">16&lt;/span> &lt;span style="color:#b452cd">6268&lt;/span> &lt;span style="color:#b452cd">19040&lt;/span> &lt;span style="color:#b452cd">0.67&lt;/span> &lt;span style="color:#b452cd">27528&lt;/span> &lt;span style="color:#b452cd">1&lt;/span> NoxVMSVC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#658b00">PS &lt;/span>C:\Users\Vita&amp;gt; &lt;span style="color:#658b00">Get-NetTcpConnection&lt;/span> -OwningProcess &lt;span style="color:#b452cd">4716&lt;/span> -State Listen
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LocalAddress LocalPort RemoteAddress RemotePort State AppliedSetting
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>------------ --------- ------------- ---------- ----- --------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b452cd">127.0&lt;/span>.0.1 &lt;span style="color:#b452cd">64001&lt;/span> &lt;span style="color:#b452cd">0.0&lt;/span>.0.0 &lt;span style="color:#b452cd">0&lt;/span> Listen
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b452cd">127.0&lt;/span>.0.1 &lt;span style="color:#b452cd">63001&lt;/span> &lt;span style="color:#b452cd">0.0&lt;/span>.0.0 &lt;span style="color:#b452cd">0&lt;/span> Listen
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b452cd">127.0&lt;/span>.0.1 &lt;span style="color:#b452cd">62001&lt;/span> &lt;span style="color:#b452cd">0.0&lt;/span>.0.0 &lt;span style="color:#b452cd">0&lt;/span> Listen
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#b452cd">127.0&lt;/span>.0.1 &lt;span style="color:#b452cd">61001&lt;/span> &lt;span style="color:#b452cd">0.0&lt;/span>.0.0 &lt;span style="color:#b452cd">0&lt;/span> Listen
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>依次尝试连接这些&lt;code>LocalPort&lt;/code>，验证&lt;code>adb devices&lt;/code>是否正常。&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>pwlin, “Android : add cert to system store,” &lt;em>Gist&lt;/em>, Mar. 07, 2016. &lt;a href="https://gist.github.com/pwlin/8a0d01e6428b7a96e2eb">https://gist.github.com/pwlin/8a0d01e6428b7a96e2eb&lt;/a> (accessed Nov. 25, 2021).&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>Mateusz, “ADB can’t connect to Nox,” &lt;em>Stack Overflow&lt;/em>, Jul. 06, 2018. &lt;a href="https://stackoverflow.com/questions/51214825/adb-cant-connect-to-nox">https://stackoverflow.com/questions/51214825/adb-cant-connect-to-nox&lt;/a> (accessed Nov. 25, 2021).&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&amp;#160;&lt;a href="#fnref1:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div>
- /posts/android-emulator-packet-capture-and-everything/ -</description></item><item><title>R语言列表操作和连接MongoDB经验之谈</title><link>/posts/r-lang-useful-tricks/</link><pubDate>Wed, 10 Nov 2021 17:28:19 +0800</pubDate><guid>/posts/r-lang-useful-tricks/</guid><description>Magical trees, take me home. /posts/r-lang-useful-tricks/ -&lt;figure>&lt;img src="/img/RStudio.png"
alt="RStudio"/>&lt;figcaption>
&lt;p>RStudio&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="r语言的好处">R语言的好处&lt;/h2>
&lt;p>在做Teamfight Tactics分析时，我先通过Riot&amp;rsquo;s API收集到了许多场次的对局数据。如何将这些复杂的数据转换成可以直接使用的数据，方便进行分析呢？&lt;/p>
&lt;p>之前一直用的是Python，思路是通过pymongo包连接MongoDB提取数据，再通过python内建函数进行转换和分析。这样需要不停使用&lt;code>Table[&amp;quot;sub&amp;quot;]['subsub']&lt;/code>这样的格式取得内部结构。这部分内容没有代码提示，需要程序员自行记忆每个&lt;code>Key&lt;/code>对应的结构，不仅麻烦，而且容易出错。可以预计分析数据的时候会用到大量循环，而python的效率让人缺乏信心。再加上后续还有画图步骤，而&lt;code>matplotlib&lt;/code>是一个非常麻烦的东西，我有点害怕。&lt;/p>
&lt;p>也考虑过使用&lt;code>Matlab&lt;/code>，它的好处是不少循环可以转为向量化运算，速度会快不少，而且画图容易。&lt;code>Matlab&lt;/code>的附加功能里有一个&lt;code>Database Toolbox Interface for MongoDB&lt;/code>。我甚至已经使用它进行了一段时间分析了，但后面发现默认生成的&lt;code>.mat&lt;/code>格式转换为其他格式比较困难。而且运行速度也不是很理想，消耗资源很大，400MB的数据量在运算时常常卡死我的电脑。也可能是因为我不常使用它，所有代码本身编写的也不够好。&lt;/p>
&lt;p>最后终于接触到了R语言，这真是个好工具。配合RStudio，顺手又高效。它解决了上面的所有问题，而且内建和社区的函数和包为分析过程提供了很大帮助，为我节省了很多时间。它的一些用法和其他语言显得有些奇怪，理解和熟悉需要一些时间，但R语言的学习绝对物超所值。&lt;/p>
&lt;p>李东风老师的开源R语言教程很好，推荐一下：&lt;a href="https://www.math.pku.edu.cn/teachers/lidf/docs/Rbook/html/_Rbook/index.html">https://www.math.pku.edu.cn/teachers/lidf/docs/Rbook/html/_Rbook/index.html&lt;/a>&lt;/p>
&lt;h2 id="r语言的数据类型">R语言的数据类型&lt;/h2>
&lt;h3 id="向量">向量&lt;/h3>
&lt;p>向量是将若干个基础类型&lt;strong>相同&lt;/strong>的值存储在一起，各个元素可以按序号访问。需要注意的是，R语言各种类型的数据结构的下标都是从1开始的。例如&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22"># 数值型&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>marks &amp;lt;- &lt;span style="color:#008b45">c&lt;/span>(&lt;span style="color:#b452cd">10&lt;/span>, &lt;span style="color:#b452cd">6&lt;/span>, &lt;span style="color:#b452cd">4&lt;/span>, &lt;span style="color:#b452cd">7&lt;/span>, &lt;span style="color:#b452cd">8&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>x &amp;lt;- &lt;span style="color:#008b45">c&lt;/span>(&lt;span style="color:#b452cd">1&lt;/span>:&lt;span style="color:#b452cd">3&lt;/span>, &lt;span style="color:#b452cd">10&lt;/span>:&lt;span style="color:#b452cd">13&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22"># 逻辑型&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008b45">c&lt;/span>(&lt;span style="color:#b452cd">1&lt;/span>, &lt;span style="color:#b452cd">3&lt;/span>, &lt;span style="color:#b452cd">5&lt;/span>) &amp;gt; &lt;span style="color:#b452cd">2&lt;/span> &lt;span style="color:#228b22"># [1] FALSE TRUE TRUE&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22"># 字符型&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s1 &amp;lt;- &lt;span style="color:#008b45">c&lt;/span>(&lt;span style="color:#cd5555">&amp;#39;abc&amp;#39;&lt;/span>, &lt;span style="color:#cd5555">&amp;#39;&amp;#39;&lt;/span>, &lt;span style="color:#cd5555">&amp;#39;a cat&amp;#39;&lt;/span>, &lt;span style="color:#8b008b;font-weight:bold">NA&lt;/span>, &lt;span style="color:#cd5555">&amp;#39;李明&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>内建的大多数函数以向量为参数时，会对向量内的元素逐个运算，然后返回一个和原来一样长的向量。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008b45">sqrt&lt;/span>(&lt;span style="color:#008b45">c&lt;/span>(&lt;span style="color:#b452cd">1&lt;/span>, &lt;span style="color:#b452cd">4&lt;/span>, &lt;span style="color:#b452cd">6.25&lt;/span>)) &lt;span style="color:#228b22"># [1] 1.0 2.0 2.5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>x &amp;lt;- &lt;span style="color:#008b45">c&lt;/span>(&lt;span style="color:#b452cd">33&lt;/span>, &lt;span style="color:#b452cd">55&lt;/span>, &lt;span style="color:#b452cd">11&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008b45">order&lt;/span>(x) &lt;span style="color:#228b22"># [1] 3 1 2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>x&lt;span style="color:#008b45">[order&lt;/span>(x)] &lt;span style="color:#228b22"># [1] 11 33 55&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="列表">列表&lt;/h3>
&lt;p>R中列表(&lt;code>list&lt;/code>)类型来保存&lt;strong>不同&lt;/strong>类型的数据。一个主要目的是提供R分析结果输出包装：输出一个变量，这个变量包括回归系数、预测值、残差、检验结果等等一系列不能放到规则形状数据结构中的内容。实际上，数据框也是列表的一种，但是数据框要求各列等长，而列表不要求。&lt;/p>
&lt;p>列表可以命名，命名后类似字典，可以通过名字访问。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>rec &amp;lt;- &lt;span style="color:#008b45">list&lt;/span>(name=&lt;span style="color:#cd5555">&amp;#34;李明&amp;#34;&lt;/span>, age=&lt;span style="color:#b452cd">30&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scores=&lt;span style="color:#008b45">c&lt;/span>(&lt;span style="color:#b452cd">85&lt;/span>, &lt;span style="color:#b452cd">76&lt;/span>, &lt;span style="color:#b452cd">90&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rec
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## $name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## [1] &amp;#34;李明&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## $age&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## [1] 30&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## $scores&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## [1] 85 76 90&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rec$age &lt;span style="color:#228b22"># 或 rec[[&amp;#34;age&amp;#34;]]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>也可以通过下标访问，但需要两重中括号。如果使用单重方括号对列表取子集，结果还是列表而不是列表元素。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>rec[[3]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## [1] 85 76 90&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rec[[3]][2]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## [1] 76&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rec[3]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## $scores&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## [1] 85 76 90&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>要删除某个元素，直接将该元素赋值为&lt;code>NULL&lt;/code>；添加元素则是直接为该元素赋值。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>rec[[&lt;span style="color:#cd5555">&amp;#34;age&amp;#34;&lt;/span>]] &amp;lt;- &lt;span style="color:#8b008b;font-weight:bold">NULL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rec[[&lt;span style="color:#cd5555">&amp;#34;身高&amp;#34;&lt;/span>]] &amp;lt;- &lt;span style="color:#b452cd">178&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## $name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## [1] &amp;#34;李明&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## $三科分数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## [1] 85 0 90&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## $身高&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## [1] 178&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="数据框">数据框&lt;/h3>
&lt;p>数据框类似于数据库表或Excel数据表的形式。这样形式的数据在R中叫做数据框(&lt;code>data.frame&lt;/code>)。数据框类似于一个矩阵，有$n$个横行、$p$个纵列，但各列允许有不同类型：数值型向量、因子、字符型向量、日期时间向量。同一列的数据类型相同。数据框是一个特殊的列表，其每个列表元素都是一个长度相同的向量。&lt;/p>
&lt;p>数据框可以说是处理数据的最佳方式，利用它可以轻松按列或按行取值，并且可以直接用向量化的方式计算。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>d&amp;lt;-&lt;span style="color:#008b45">data.frame&lt;/span>(TraitsComb=&lt;span style="color:#008b45">character&lt;/span>(&lt;span style="color:#b452cd">0&lt;/span>),Top4=&lt;span style="color:#008b45">double&lt;/span>(&lt;span style="color:#b452cd">0&lt;/span>),Winner=&lt;span style="color:#008b45">double&lt;/span>(&lt;span style="color:#b452cd">0&lt;/span>),AvgPlacement=&lt;span style="color:#008b45">double&lt;/span>(&lt;span style="color:#b452cd">0&lt;/span>),PickTimes=&lt;span style="color:#008b45">integer&lt;/span>(&lt;span style="color:#b452cd">0&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008b45">print&lt;/span>(d)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## [1] TraitsComb Top4 Winner AvgPlacement PickTimes &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## &amp;lt;0 行&amp;gt; (或0-长度的row.names)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d[1,]&amp;lt;-&lt;span style="color:#008b45">list&lt;/span>(&lt;span style="color:#cd5555">&amp;#34;a&amp;#34;&lt;/span>, &lt;span style="color:#b452cd">1.2&lt;/span>, &lt;span style="color:#b452cd">2.3&lt;/span>, &lt;span style="color:#b452cd">3.4&lt;/span>, &lt;span style="color:#b452cd">5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008b45">print&lt;/span>(d)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## TraitsComb Top4 Winner AvgPlacement PickTimes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## 1 a 1.2 2.3 3.4 5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008b45">colnames&lt;/span>(d)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## [1] &amp;#34;TraitsComb&amp;#34; &amp;#34;Top4&amp;#34; &amp;#34;Winner&amp;#34; &amp;#34;AvgPlacement&amp;#34; &amp;#34;PickTimes&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d$Winner
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## [1] 2.3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d[3]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## Winner&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## 1 2.3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d[3][1]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## Winner&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## 1 2.3&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="r语言函数">R语言函数&lt;/h2>
&lt;h3 id="字符串">字符串&lt;/h3>
&lt;p>观察下面的例子，只用了1行代码就实现了我想要的字符串拼接。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>tiers&amp;lt;-&lt;span style="color:#008b45">rev&lt;/span>(&lt;span style="color:#008b45">c&lt;/span>(&lt;span style="color:#cd5555">&amp;#34;DIAMOND&amp;#34;&lt;/span>,&lt;span style="color:#cd5555">&amp;#34;PLATINUM&amp;#34;&lt;/span>,&lt;span style="color:#cd5555">&amp;#34;GOLD&amp;#34;&lt;/span>,&lt;span style="color:#cd5555">&amp;#34;SILVER&amp;#34;&lt;/span>,&lt;span style="color:#cd5555">&amp;#34;BRONZE&amp;#34;&lt;/span>,&lt;span style="color:#cd5555">&amp;#34;IRON&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ranks&amp;lt;-&lt;span style="color:#008b45">rev&lt;/span>(&lt;span style="color:#008b45">c&lt;/span>(&lt;span style="color:#cd5555">&amp;#34;I&amp;#34;&lt;/span>,&lt;span style="color:#cd5555">&amp;#34;II&amp;#34;&lt;/span>,&lt;span style="color:#cd5555">&amp;#34;III&amp;#34;&lt;/span>,&lt;span style="color:#cd5555">&amp;#34;IV&amp;#34;&lt;/span>,&lt;span style="color:#cd5555">&amp;#34;V&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tire_order&amp;lt;-&lt;span style="color:#008b45">lapply&lt;/span>(tiers,&lt;span style="color:#8b008b;font-weight:bold">function&lt;/span>(x) &lt;span style="color:#008b45">paste&lt;/span>(x,ranks,sep=&lt;span style="color:#cd5555">&amp;#34;-&amp;#34;&lt;/span>)) %&amp;gt;% unlist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## [1] &amp;#34;IRON-V&amp;#34; &amp;#34;IRON-IV&amp;#34; &amp;#34;IRON-III&amp;#34; &amp;#34;IRON-II&amp;#34; &amp;#34;IRON-I&amp;#34; &amp;#34;BRONZE-V&amp;#34; &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## [7] &amp;#34;BRONZE-IV&amp;#34; &amp;#34;BRONZE-III&amp;#34; &amp;#34;BRONZE-II&amp;#34; &amp;#34;BRONZE-I&amp;#34; &amp;#34;SILVER-V&amp;#34; &amp;#34;SILVER-IV&amp;#34; &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## [13] &amp;#34;SILVER-III&amp;#34; &amp;#34;SILVER-II&amp;#34; &amp;#34;SILVER-I&amp;#34; &amp;#34;GOLD-V&amp;#34; &amp;#34;GOLD-IV&amp;#34; &amp;#34;GOLD-III&amp;#34; &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## [19] &amp;#34;GOLD-II&amp;#34; &amp;#34;GOLD-I&amp;#34; &amp;#34;PLATINUM-V&amp;#34; &amp;#34;PLATINUM-IV&amp;#34; &amp;#34;PLATINUM-III&amp;#34; &amp;#34;PLATINUM-II&amp;#34; &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## [25] &amp;#34;PLATINUM-I&amp;#34; &amp;#34;DIAMOND-V&amp;#34; &amp;#34;DIAMOND-IV&amp;#34; &amp;#34;DIAMOND-III&amp;#34; &amp;#34;DIAMOND-II&amp;#34; &amp;#34;DIAMOND-I&amp;#34; &lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里&lt;code>lapply&lt;/code>是对列表遍历，将每个元素先赋值为&lt;code>x&lt;/code>，然后应用&lt;code>function(x)&lt;/code>函数。&lt;code>paste&lt;/code>函数是将两个参数连接起来，&lt;code>sep&lt;/code>是连接符。&lt;/p>
&lt;p>&lt;code>%&amp;gt;%&lt;/code>是一个&lt;code>pipe&lt;/code>，它将结果传递给另一个函数作为第一个参数。&lt;code>unlist&lt;/code>是将列表转换为向量。&lt;/p>
&lt;h3 id="排序">排序&lt;/h3>
&lt;p>对一张以下格式的数据框排序，可以使用&lt;code>order&lt;/code>函数。倒序只需要在排序的列名前加&lt;code>-&lt;/code>号。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008b45">head&lt;/span>(traits_comp_discribe)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## TraitsComb Top4 Winner AvgPlacement PickTimes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## 1 Transformer 0.253 0.025 5.696 79&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## 2 Bruiser,Cuddly,Glutton,Sister,Transformer 0.922 0.314 2.373 51&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## 3 Arcanist,Cuddly 0.662 0.166 3.593 145&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## 4 Socialite 0.217 0.024 6.133 83&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## 5 Chemtech,Twinshot 0.462 0.154 4.231 13&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## 6 Clockwork,Cuddly,Transformer 0.750 0.250 3.875 8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008b45">head&lt;/span>(traits_comp_discribe&lt;span style="color:#008b45">[order&lt;/span>(-traits_comp_discribe$Top4),])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## TraitsComb Top4 Winner AvgPlacement PickTimes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## 7 Academy,Cuddly,Imperial 1 0.500 3.000 4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## 11 Bruiser,Sister,Socialite 1 0.400 6.400 5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## 32 Cuddly,Glutton,Sister,Socialite 1 0.333 2.000 3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## 34 Mercenary 1 0.071 7.286 14&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## 37 Bruiser,Sister,Transformer,Twinshot 1 0.333 3.000 3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## 38 Bodyguard,Cuddly,Syndicate 1 0.250 3.500 4&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="mongodb">MongoDB&lt;/h2>
&lt;p>MongoDB是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富却最像关系数据库的。它提供了一个非常简单的接口，可以让你在简单的程序中操作数据库。&lt;/p>
&lt;p>在R语言中，连接MongoDB可以使用&lt;code>mongolite&lt;/code>库&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008b45">install.packages&lt;/span>(&lt;span style="color:#cd5555">&amp;#34;mongolite&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008b45">library&lt;/span>(mongolite)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>url &amp;lt;- &lt;span style="color:#cd5555">&amp;#34;mongodb://user:pass@site:port&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>db&amp;lt;- &lt;span style="color:#cd5555">&amp;#34;tft&amp;#34;&lt;/span> &lt;span style="color:#228b22"># 数据库名&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22"># 连接数据库&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s_con &amp;lt;- &lt;span style="color:#008b45">mongo&lt;/span>(collection=&lt;span style="color:#cd5555">&amp;#39;summoner&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> db=db,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url=url)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22"># 查询数据 （查询等级低于100的召唤师）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>summoners &amp;lt;- s_con$&lt;span style="color:#008b45">find&lt;/span>(&lt;span style="color:#cd5555">&amp;#39;{&amp;#34;summonerlevel&amp;#34;: { &amp;#34;$lt&amp;#34;: 100 }}&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#008b45">head&lt;/span>(summoners)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## id puuid summonerlevel summonertire summonerrank&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## 1 4 ******** 66 PLATINUM I&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## 2 5 ******** 1 DIAMOND II&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## 3 6 ******** 85 MASTER I&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## 4 8 ******** 1 PLATINUM IV&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## 5 9 ******** 20 PLATINUM II&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#228b22">## 6 12 ******** 19 PLATINUM II&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>- /posts/r-lang-useful-tricks/ -</description></item><item><title>通过Gitbook将Markdown电子书转换为PDF格式</title><link>/posts/convert-gitbook-to-pdf/</link><pubDate>Wed, 10 Nov 2021 17:18:22 +0800</pubDate><guid>/posts/convert-gitbook-to-pdf/</guid><description>Magical trees, take me home. /posts/convert-gitbook-to-pdf/ -&lt;h2 id="找到一本电子书">找到一本电子书&lt;/h2>
&lt;p>以《&lt;a href="https://github.com/unknwon/the-way-to-go_ZH_CN">the-way-to-go_ZH_CN&lt;/a>》为例，先&lt;code>clone&lt;/code>下来。&lt;/p>
&lt;h2 id="预处理">预处理&lt;/h2>
&lt;p>GitBook使用简单的目录结构，通过 &lt;code>SUMMARY.md&lt;/code> 目录文件来确定哪些文件被转换。原书目录是&lt;code>TOC.md&lt;/code>，因此将&lt;code>TOC.md&lt;/code>改名为&lt;code>SUMMARY.md&lt;/code>。&lt;/p>
&lt;p>原书的图片链接都带上了&lt;code>?raw=true&lt;/code>参数，导致转换后的PDF文件里图片无法正确显示，需要全部删除&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>grep -rl &lt;span style="color:#cd5555">&amp;#34;?raw=true&amp;#34;&lt;/span> ./ | xargs sed -i &lt;span style="color:#cd5555">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#cd5555">&amp;#39;s/?raw=true//g&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="开始转换">开始转换&lt;/h2>
&lt;p>安装&lt;a href="https://calibre-ebook.com">calibre&lt;/a>，主要是需要&lt;code>ebook-converter&lt;/code>这个命令行工具&lt;/p>
&lt;ol>
&lt;li>创建一个符号连接&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo ln -s /Applications/calibre.app/Contents/MacOS/ebook-convert /usr/local/bin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>/usr/local/bin&lt;/code>可以是&lt;code>$PATH$&lt;/code>中的任何文件夹&lt;/p>
&lt;ol start="2">
&lt;li>安装&lt;code>gitbook-cli&lt;/code>，这时会自动编译安装&lt;code>gitbook&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm install gitbook-cli -g
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>转换之&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>gitbook pdf ./ ./book.pdf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>- /posts/convert-gitbook-to-pdf/ -</description></item></channel></rss>