<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>速查表 on Magical trees, take me home.</title><link>/tags/%E9%80%9F%E6%9F%A5%E8%A1%A8/</link><description>Recent content in 速查表 on Magical trees, take me home.</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Thu, 12 Sep 2024 07:09:18 +0000</lastBuildDate><atom:link href="/tags/%E9%80%9F%E6%9F%A5%E8%A1%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>Buildroot 速查表</title><link>/posts/buildroot-cheetsheet/</link><pubDate>Wed, 04 Sep 2024 00:00:00 +0800</pubDate><guid>/posts/buildroot-cheetsheet/</guid><description>完整文档可以在官方网站找到。
基本命令 Make 提示
使用 make help 获取所有可用目标的列表。
命令 描述 make 构建 rootfs make xyz_defconfig 选择配置文件 make menuconfig 打开配置菜单 make savedefconfig 将当前配置保存到 defconfig 文件中 make source 下载包的源代码 make clean 清理所有构建产品（包括构建目录、主机、暂存和目标树、镜像和工具链） make distclean 清理所有内容，包括配置 包管理 特定包的 make 目标
命令 描述 make &amp;lt;pkg&amp;gt; 构建一个包 make &amp;lt;pkg&amp;gt;-reinstall 重新安装一个包 make &amp;lt;pkg&amp;gt;-rebuild 重新构建一个包（这意味着重新安装） make &amp;lt;pkg&amp;gt;-reconfigure 重新配置一个包（这意味着重新构建） make &amp;lt;pkg&amp;gt;-dirclean 清理包目录 调试 命令 描述 make graph-depends 生成依赖关系图 make &amp;lt;pkg&amp;gt;-graph-depends 生成包的依赖关系图 目录结构 目录 描述 configs 单板的配置和 defconfig 文件的位置 package 包定义的位置 dl 下载的源代码压缩包 output/build 所有组件构建的目录 output/images 构建的内核、引导加载程序和根文件系统镜像的位置 output/staging 交叉编译工具链和用户空间包的头文件和库的位置（这是 host//sysroot 的软链） output/host 包括交叉编译工具链在内的主机工具的位置 output/target 几乎是最终的目标根文件系统 .</description></item><item><title>Yocto &amp; Bitbake 速查表</title><link>/posts/yocto-cheetsheet/</link><pubDate>Wed, 04 Sep 2024 00:00:00 +0800</pubDate><guid>/posts/yocto-cheetsheet/</guid><description>完整文档可以在Yocto 文档网站找到。 参考自yoctoproject-cheatsheet。
Cli 命令 命令 描述 todo todo 变量语法和操作 参考自Bitbake User Manual
可以随时使用 bitbake -e 查看编译时的变量。
语法 描述 VARIABLE = &amp;quot;value&amp;quot; 设置变量 VARIABLE = &amp;quot; value &amp;quot; 如果变量值中有空格，那么空格会被保留 VARIABLE = &amp;quot;&amp;quot; 设置变量为空 VARIABLE = &amp;quot; &amp;quot; 设置变量为一个空格 VARIABLE = '&amp;quot;' 通过单引号设置含有双引号的变量 VARIABLE = &amp;quot;${OTHER_VARIABLE}&amp;quot; 引用其他变量, 变量在真正使用时才会被展开 VARIABLE := &amp;quot;${OTHER_VARIABLE}&amp;quot; 设置变量，立即展开 VARIABLE ?= &amp;quot;value&amp;quot; 设置默认值，如果变量已经设置，那么不会覆盖 VARIABLE ??= &amp;quot;value&amp;quot; 设置弱默认值，见弱默认值 VARIABLE += &amp;quot;value&amp;quot; 追加变量值（带空格） VARIABLE =+ &amp;quot;value&amp;quot; 在变量值前面追加（带空格） VARIABLE .= &amp;quot;value&amp;quot; 追加变量值（无空格） VARIABLE =.</description></item></channel></rss>