<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mitmproxy on Magical trees, take me home.</title><link>/tags/mitmproxy/</link><description>Recent content in Mitmproxy on Magical trees, take me home.</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Tue, 10 Sep 2024 02:54:08 +0000</lastBuildDate><atom:link href="/tags/mitmproxy/index.xml" rel="self" type="application/rss+xml"/><item><title>Android 抓包以及 mitmproxy</title><link>/posts/android-emulator-packet-capture-and-everything/</link><pubDate>Fri, 26 Nov 2021 02:37:41 +0800</pubDate><guid>/posts/android-emulator-packet-capture-and-everything/</guid><description>最佳实践 经过一段时间的研究，又有了新的看法。
准备以下两种工具：
mitmproxy Android Emulator(MuMu, BlueStack &amp;hellip;) mitmproxy mitmproxy最好使用pipx安装。因为mitmproxy运行在独立的venv中，使用pipx方便为mitmproxy安装额外的python包。
brew install pipx pipx install mitmproxy 最好按照提示说明，使用pipx ensurepath修改环境变量。
这样我们就可以为mitmproxy安装额外的python包了。
pipx inject mitmproxy pycryptodome # 安装 pycryptodome 包，用于AES解码 将浏览器代理设置到8080端口，打开(mitm.it)[mitm.it]下载对应平台的证书。
Android Emulator 抓包之前有两个步骤：
设置手动代理 安装并信任自签名https证书 设置WiFi代理为主机8080端口：
以下是简化的脚本1，先看看adb devices信息，是否已经连接。如果没有成功连接需要adb kill-server，再重试几次。或者参照后文2。 直接运行以下脚本./push.sh YOUR_CRT.crt：
PEM_FILE_NAME=$1 echo &amp;#34;$PEM_FILE_NAME&amp;#34; hash=$(openssl x509 -inform PEM -subject_hash_old -in $PEM_FILE_NAME | head -1) OUT_FILE_NAME=&amp;#34;$hash.0&amp;#34; cp $PEM_FILE_NAME $OUT_FILE_NAME openssl x509 -inform PEM -text -in $PEM_FILE_NAME -out /dev/null &amp;gt;&amp;gt; $OUT_FILE_NAME echo &amp;#34;Saved to $OUT_FILE_NAME&amp;#34; adb shell mount -o rw,remount,rw /system adb push $OUT_FILE_NAME /system/etc/security/cacerts/ adb shell mount -o ro,remount,ro /system adb reboot 如果模拟器正常重启的话应该就可以了。</description></item></channel></rss>